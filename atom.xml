<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Vivian&#39;s note</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-09-07T11:52:58.747Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>oxygenjing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用ROSE寻找超级增强子</title>
    <link href="http://yoursite.com/2017/09/06/%E4%BD%BF%E7%94%A8ROSE%E5%AF%BB%E6%89%BE%E8%B6%85%E7%BA%A7%E5%A2%9E%E5%BC%BA%E5%AD%90/"/>
    <id>http://yoursite.com/2017/09/06/使用ROSE寻找超级增强子/</id>
    <published>2017-09-06T01:18:00.000Z</published>
    <updated>2017-09-07T11:52:58.747Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、工具介绍"><a href="#一、工具介绍" class="headerlink" title="一、工具介绍"></a>一、工具介绍</h3><p>ROSE（RANK ORDERING OF SUPER-ENHANCERS）是麻省理工学院Richard A. Young实验室开发的一种通过bam文件及gff文件寻找enhancer及其相关基因的工具，此工具由python编写。项目主页：<a href="http://younglab.wi.mit.edu/super_enhancer_code.html" target="_blank" rel="external">http://younglab.wi.mit.edu/super_enhancer_code.html</a></p><p><img src="http://img.blog.csdn.net/20170906091320027?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb3h5Z2VuamluZw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ROSE项目主页"></p><h3 id="二、ROSE在服务器上的安装"><a href="#二、ROSE在服务器上的安装" class="headerlink" title="二、ROSE在服务器上的安装"></a>二、ROSE在服务器上的安装</h3><p>ROSE依赖软件有：Python 2.7.3, R 2.15.3, 和 SAMtools 0.1.18，因此在安装ROSE前，首先确保服务器上安装了这三个工具。关于这三个工具的安装，可以查看这篇博文： <a href="https://oxygenjing.github.io/2017/08/05/RNA-seq%E5%88%86%E6%9E%90%E6%89%80%E7%94%A8%E7%94%9F%E4%BF%A1%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%A6%E7%BB%86%E8%AE%B0%E5%BD%95/" target="_blank" rel="external">RNA-seq分析服务器安装生信工具过程</a>。</p><p>ROSE安装方式见以下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget https://bitbucket.org/young_computation/rose/get/1a9bb86b5464.zip</div><div class="line">unzip 1a9bb86b5464.zip</div><div class="line"><span class="meta">#</span><span class="bash"> 解压后文件见下图，可以直接通过python *.py调用工具</span></div></pre></td></tr></table></figure><a id="more"></a><p><img src="http://img.blog.csdn.net/20170906093701822?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb3h5Z2VuamluZw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h3 id="三、具体使用"><a href="#三、具体使用" class="headerlink" title="三、具体使用"></a>三、具体使用</h3><p>ROSE的最主要用法有<code>ROSE_main.py</code>和<code>ROSE_geneMapper.py</code>。其中<code>ROSE_main.py</code> 用于寻找增强子而<code>ROSE_geneMapper.py</code> 用于为增强子相关的基因进行注释。</p><ul><li><strong>ROSE_mian.py 用法</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">python ROSE_main.py -g GENOME_BUILD -i INPUT_CONSTITUENT_GFF \</div><div class="line">-r RANKING_BAM -o OUTPUT_DIRECTORY \</div><div class="line">[optional: -s STITCHING_DISTANCE -t TSS_EXCLUSION_ZONE_SIZE -c CONTROL_BAM]</div><div class="line"></div><div class="line"><span class="comment"># 参数解释</span></div><div class="line">-grefseq参考基因组</div><div class="line">-i输入gff文件，一般为使用MACS鉴定得到的Med1富集区域（gff具体格式下文介绍）</div><div class="line">-r排序后的bam文件，同时需为bam添加index</div><div class="line">-o输出文件目录</div><div class="line"></div><div class="line"><span class="comment"># 可选参数</span></div><div class="line">-sSTITCHING_DISTANCE，合并两个region的最大距离，默认值为12.5kb</div><div class="line">-tTSS_EXCLUSION_ZONE_SIZE，排除TSS区域大小，排除与TSS前后某距离内的区域，以排除启动子偏差（默认值：0;推荐值：2500）。如果设置该值为0，将不会查找基因。</div><div class="line">-cCONTROL_BAM，control样本的bam文件</div></pre></td></tr></table></figure></li></ul><p><strong>输入文件格式要求：</strong></p><p>bam文件格式要求：需要排序和构建index（samtools可以操作），bam文件的染色体id需要以chr开头。</p><p>gff文件格式要求：gff文件必须有以下列<br>1.染色体位置（chr#）<br>2.每个增强子区域的特定id<br>4.区域起始位置<br>5.区域终止位置<br>7.正负链信息（+, -, .）<br>gff格式参考：<a href="https://genome.ucsc.edu/FAQ/FAQformat.html#format3" target="_blank" rel="external">https://genome.ucsc.edu/FAQ/FAQformat.html#format3</a></p><p>ROSE也有转换bam为gff的工具，在运行<code>ROSE_mian.py</code> 时，会调用<code>ROSE_bamToGFF.py</code> 。</p><p><code>ROSE_main.py</code>运行实例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">python <span class="variable">$SOFT_PATH</span>/ROSE_main.py -g HG38 -i <span class="variable">$WORK_PATH</span>/gtf/KYSE510_peaks.bed \</div><div class="line">-r <span class="variable">$WORK_PATH</span>/samtools_sort/sort_treat1.bam -c <span class="variable">$WORK_PATH</span>/samtools_sort/sort_control1.bam \</div><div class="line">-o <span class="variable">$WORK_PATH</span>/ROSE/KYSE510 -s 12500 -t 2000 2&gt;<span class="variable">$LOG_PATH</span>/KYSE510_enhancer.log</div></pre></td></tr></table></figure></p><p>其中，更多基因组可以从<a href="https://github.com/linlabbcm/rose2/tree/master/rose2/annotation" target="_blank" rel="external">此处</a>获取保存到ROSE的annotation文件夹，但是需要注意修改相应ROSE_mian.py的相应代码。</p><p><strong>输出文件如下：</strong><br>1.<code>**OUTPUT_DIRECTORY/gff/*.gtf</code>    该文件为输入gtf文件的副本；</p><p>2.<code>**OUTPUT_DIRECTORY/gff/*STITCHED*.gtf</code>    该文件为通过在STITCHING_DISTANCE将INPUT_CONSTITUENT_GFF拼接在一起创建的gff文件；文件列数如下：<br><code>chrom, name, [blank], start, end, [blank], [blank], strand, [blank], [blank], name</code><br>其中 <code>name</code> 字段的命名方式为：拼接起来的区域数+最左端区域ID。</p><p>3.<code>**OUTPUT_DIRECTORY/mappedGFF/*_MAPPED.gff</code>    每个bam文件通过bamToGFF的输出文件，包含以下列：<br><em>（成分ID，测试区域，平均读取密度（单位为每百万位元每百万映射的单位读数密度））</em></p><p>4.<code>**OUTPUT_DIRECTORY/mappedGFF/* _STITCHED * _MAPPED.gff</code>    每个bam文件通过bamToGFF的输出文件，该文件中对增强子区域进行了拼接，包含以下列：<br><em>（拼接增强子ID，测试区域，平均读取密度（单位为百万映射每单位拼接增强子数））</em></p><p>5.<code>**OUTPUT_DIRECTORY/STITCHED_ENHANCER_REGION_MAP.txt</code>    bamToGFF计算后得到的拼接增强子密度文件，包含以下列：<br><em>（拼接增强子ID，染色体，拼接增强子起始位置，拼接增强子末端位置，拼接数，BAM信号等级，BAM信号）</em></p><p>6..<code>**OUTPUT_DIRECTORY/*_AllEnhancers.table.txt</code>    增强子列表，包含每个增强子的排名和是否为超级增强子，包含以下列：<br><em>（增强子ID，染色体，拼接增强子起始位点，拼接增强子末端，拼接数，拼接成分大小，BAM的信号，BAM的等级，是否为超增强子：是（1）否（0））</em></p><p>7.<code>**OUTPUT_DIRECTORY/* _SuperEnhancers.table.txt</code>    超级增强子的排名，为<code>*_AllEnhancers.table.txt</code> 文件的子集。包含以下列：<br>（拼接增强剂ID，染色体，拼接增强子起始位点，拼接增强子末端，拼接数，缝合在一起的成分的大小，RANKING_BAM的信号，RANKING_BAM的等级，超增强子的二进制（1）与典型（0））</p><p>8.<code>**OUTPUT_DIRECTORY/*_Enhancers_withSuper.bed</code>    可以加载到UCSC浏览器中可视化的增强子bed文件</p><p>9.<code>**OUTPUT_DIRECTORY/*_Plot_points.png</code>    所有增强子散点图，如下图：<br><img src="http://img.blog.csdn.net/20170906113050801?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb3h5Z2VuamluZw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"> </p><ul><li><strong>ROSE_geneMapper.py 用法</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Usage: ROSE_geneMapper.py [options] -g [GENOME] -i [INPUT_ENHANCER_FILE]</div><div class="line"></div><div class="line"><span class="comment"># 参数解释</span></div><div class="line">-i INPUT输入ROSE_mian.py生成的enhancer table文件</div><div class="line">-g GENOME输入genome信息（MM9,MM8,HG18,HG19等）  </div><div class="line">-o OUT输出路径</div><div class="line"><span class="comment"># 可选参数</span></div><div class="line">-l GENELIST要过滤的基因列表</div><div class="line">-w WINDOW搜索基因距离，默认值为50,000bp</div><div class="line">-f format如果使用此参数，将保持原输入文件格式输出</div></pre></td></tr></table></figure></li></ul><p><code>ROSE_geneMapper.py</code> 运行实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">python <span class="variable">$SOFT_PATH</span>/ROSE_geneMapper.py -i <span class="variable">$WORK_PATH</span>/ROSE/TE7/TE7_peaks_AllEnhancers.table.txt \</div><div class="line">-g HG38 -o <span class="variable">$WORK_PATH</span>/ROSE/TE7 2&gt;<span class="variable">$LOG_PATH</span>/TE7_enhancer_anno.log</div></pre></td></tr></table></figure><p><strong>输出文件如下：</strong><br>1.<code>**OUTPUT_DIRECTORY/*ENHANCER_TO_GENE.txt</code>        enhancer重叠基因、附近基因以及最近的基因列表</p><p>2.<code>**OUTPUT_DIRECTORY/*GENE_TO_ENHANCER.txt</code>        以每个基因为列名的和其相关的增强子位置信息列表</p><p>得到这两个表格即可对基因进行筛选然后进行GO及KEGG分析等。</p><p>下图是运行两工具的结果截图：</p><p><img src="http://img.blog.csdn.net/20170906104237027?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb3h5Z2VuamluZw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>其中被红框标注的部分是<code>ROSE_geneMapper.py</code> 运行的结果。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、工具介绍&quot;&gt;&lt;a href=&quot;#一、工具介绍&quot; class=&quot;headerlink&quot; title=&quot;一、工具介绍&quot;&gt;&lt;/a&gt;一、工具介绍&lt;/h3&gt;&lt;p&gt;ROSE（RANK ORDERING OF SUPER-ENHANCERS）是麻省理工学院Richard A. Young实验室开发的一种通过bam文件及gff文件寻找enhancer及其相关基因的工具，此工具由python编写。项目主页：&lt;a href=&quot;http://younglab.wi.mit.edu/super_enhancer_code.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://younglab.wi.mit.edu/super_enhancer_code.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20170906091320027?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb3h5Z2VuamluZw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;ROSE项目主页&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;二、ROSE在服务器上的安装&quot;&gt;&lt;a href=&quot;#二、ROSE在服务器上的安装&quot; class=&quot;headerlink&quot; title=&quot;二、ROSE在服务器上的安装&quot;&gt;&lt;/a&gt;二、ROSE在服务器上的安装&lt;/h3&gt;&lt;p&gt;ROSE依赖软件有：Python 2.7.3, R 2.15.3, 和 SAMtools 0.1.18，因此在安装ROSE前，首先确保服务器上安装了这三个工具。关于这三个工具的安装，可以查看这篇博文： &lt;a href=&quot;https://oxygenjing.github.io/2017/08/05/RNA-seq%E5%88%86%E6%9E%90%E6%89%80%E7%94%A8%E7%94%9F%E4%BF%A1%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%A6%E7%BB%86%E8%AE%B0%E5%BD%95/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RNA-seq分析服务器安装生信工具过程&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;ROSE安装方式见以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;wget https://bitbucket.org/young_computation/rose/get/1a9bb86b5464.zip&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;unzip 1a9bb86b5464.zip&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; 解压后文件见下图，可以直接通过python *.py调用工具&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Bioinformatics" scheme="http://yoursite.com/categories/Bioinformatics/"/>
    
    
  </entry>
  
  <entry>
    <title>htseq-count使用说明</title>
    <link href="http://yoursite.com/2017/08/12/htseq-count%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    <id>http://yoursite.com/2017/08/12/htseq-count使用说明/</id>
    <published>2017-08-12T03:26:18.000Z</published>
    <updated>2017-09-07T11:23:14.630Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://htseq.readthedocs.io/en/master/count.html" target="_blank" rel="external"><strong>htseq-count</strong></a>是一款用于reads计数的轻便软件，可以用于多种mapping软件（tophat、HISAT2、BWA等）的输出结果进行计数。</p><h3 id="一、htseq-count参数简介"><a href="#一、htseq-count参数简介" class="headerlink" title="一、htseq-count参数简介"></a>一、htseq-count参数简介</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 用法概述</span></div><div class="line">usage: htseq-count [options] alignment_file gff_file</div><div class="line"></div><div class="line"><span class="comment"># -h参数可显示帮助列表</span></div><div class="line">  -h, --<span class="built_in">help</span>            show this <span class="built_in">help</span> message and <span class="built_in">exit</span></div><div class="line"></div><div class="line"><span class="comment"># -f参数指定输入文件格式类型，默认文件类型为sam</span></div><div class="line">  -f &#123;sam,bam&#125;, --format &#123;sam,bam&#125;</div><div class="line"></div><div class="line"><span class="comment"># -r参数指定文件的排序方式，pos:按照染色体位置排序，name:按照read名称进行排序。双端测序数据必选参数，默认值为name。对于单端测序数据，该选项可以忽略</span></div><div class="line">  -r &#123;pos,name&#125;, --order &#123;pos,name&#125;</div><div class="line">  </div><div class="line"><span class="comment"># 当-r参数设定为pos，该选项可以选择最大内存，该参数对单端测序数据无效</span></div><div class="line">  --max-reads-in-buffer MAX_BUFFER_SIZE</div><div class="line"></div><div class="line"><span class="comment"># -s参数指定数据建库的链特异性情况，默认值为yes。对于双端测序数据，大多数为非链特异性建库</span></div><div class="line">  -s &#123;yes,no,reverse&#125;, --stranded &#123;yes,no,reverse&#125;</div><div class="line">                       </div><div class="line"><span class="comment"># -a参数指定最低read mapping质量值，低于&lt;minaqual&gt;值会被过滤掉（默认值为10）</span></div><div class="line">  -a MINAQUAL, --minaqual MINAQUAL</div><div class="line">                  </div><div class="line"><span class="comment"># -t参数指定指定最小计数单位类型，（GFF文件中的第三列：如exon），当RNA-seq分析采用 Ensembl GTF 文件类型时，默认值是exon           </span></div><div class="line">  -t FEATURETYPE, --<span class="built_in">type</span> FEATURETYPE</div><div class="line"></div><div class="line"><span class="comment"># -i参数指定最终作为特征id的值，当分析采用Ensembl GTF文件类型是，默认值是gene_id</span></div><div class="line">  -i IDATTR, --idattr IDATTR</div><div class="line"></div><div class="line"><span class="comment"># </span></div><div class="line">  --additional-attr ADDITIONAL_ATTR [ADDITIONAL_ATTR ...]</div><div class="line">                        Additional feature attributes (default: none, suitable</div><div class="line">                        <span class="keyword">for</span> Ensembl GTF files: gene_name) </div><div class="line"></div><div class="line"><span class="comment"># -m参数指定判断一个reads属于某个基因的模型，用来判断统计reads的时候对一些比较特殊的reads定义是否计入。&lt;mode&gt; 包括：默认的union和intersection-strict、 intersection-nonempty  （默认：union） </span></div><div class="line">  -m &#123;union,intersection-strict,intersection-nonempty&#125;, --mode &#123;union,intersection-strict,intersection-nonempty&#125;</div><div class="line">                        mode to handle reads overlapping more than one feature</div><div class="line">                        (choices: union, intersection-strict, intersection-</div><div class="line">                        nonempty; default: union)</div><div class="line">  --nonunique &#123;none,all&#125;</div><div class="line">                        Whether to score reads that are not uniquely aligned</div><div class="line">                        or ambiguously assigned to features</div><div class="line">  --secondary-alignments &#123;score,ignore&#125;</div><div class="line">                        Whether to score secondary alignments (0x100 flag)</div><div class="line">  --supplementary-alignments &#123;score,ignore&#125;</div><div class="line">                        Whether to score supplementary alignments (0x800 flag)</div><div class="line">  -o SAMOUTS [SAMOUTS ...], --samout SAMOUTS [SAMOUTS ...]</div><div class="line">                        write out all SAM alignment records into an output SAM</div><div class="line">                        file called SAMOUT, annotating each line with its</div><div class="line">                        feature assignment (as an optional field with tag</div><div class="line">                        <span class="string">'XF'</span>)</div><div class="line">  -q, --quiet           suppress progress report</div></pre></td></tr></table></figure><a id="more"></a><p>指定输入文件的格式，<code>&lt;format&gt;</code> 可以是 sam (for text SAM files) 或 bam (for binary BAM files)格式，默认是sam.</p><p>对于双端测序数据，必须要对SAM文件进行排序，对read name或 染色体位置 进行排序皆可，<strong>但是推荐使用read name进行排序，将会大大节约时间及服务器资源</strong>。通过 -r 可以指定数据是以什么方式排序的： <order> 可以是 name 或 pos ， 默认是name.<br>如果数据没有排序，可以通过samtools sort(推荐)或msort 排序。</order></p><h3 id="二、htseq-count的输入文件"><a href="#二、htseq-count的输入文件" class="headerlink" title="二、htseq-count的输入文件"></a>二、htseq-count的输入文件</h3><p>输入为sam或bam格式文件，需要注意的是，如果是paired-end数据必须按照reads名称排序（sort by name），否则运行时间很长，且内存占用高。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">samtools sort -n file.bam <span class="comment">#sort bam by name</span></div></pre></td></tr></table></figure><h3 id="三、htseq-count的使用和参数"><a href="#三、htseq-count的使用和参数" class="headerlink" title="三、htseq-count的使用和参数"></a>三、htseq-count的使用和参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Usage：htseq-count [options] &lt;sam_file&gt; &lt;gff_file&gt;</div></pre></td></tr></table></figure><p>主要参数说明：</p><p>-m  计数模型，统计reads的时候对一些比较特殊的reads定义是否计入。包括：默认的union和intersection-strict、 intersection-nonempty具体说明如图所示。<br>htseq-count-s reads是否匹配到同一条链上，默认：yes，可以设置no 、 reverse。<strong>对于一般的RNA-seq数据，一般选择no</strong><br>-t feature type 计数单位类型，在gtf或者gff文件中，外显子为最小的定义单位，可选参数有：exon, gene, transcript。默认值：exon<br>-i 最终的计数单位，一般为基因。 默认为：gene_id   也可以设置转录本，但由于模型问题，计数效果不佳。<br>-o 输出所有alignment的reads到一个sam文件中。可以不设置。</p><h3 id="四、htseq-count的结果文件"><a href="#四、htseq-count的结果文件" class="headerlink" title="四、htseq-count的结果文件"></a>四、htseq-count的结果文件</h3><p>结果文件如下图所示：</p><p><img src="http://static.zybuluo.com/oxygenjing/cneczjpj4ruad3puui5231zp/image_1bni91970eac128789jmstl4o9.png" alt="image_1bni91970eac128789jmstl4o9.png-56.4kB"></p><p>可以看到是两列的文件，第一列是ensemble id，第二列则是该基因的count值。文件末尾会对重复值或没有匹配上的值进行统计。</p><p>多个样本通过htseq-count得到的count文件可以通过脚本进行可并为count值矩阵，进而使用DEseq2等R包进行下游分析。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://htseq.readthedocs.io/en/master/count.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;htseq-count&lt;/strong&gt;&lt;/a&gt;是一款用于reads计数的轻便软件，可以用于多种mapping软件（tophat、HISAT2、BWA等）的输出结果进行计数。&lt;/p&gt;
&lt;h3 id=&quot;一、htseq-count参数简介&quot;&gt;&lt;a href=&quot;#一、htseq-count参数简介&quot; class=&quot;headerlink&quot; title=&quot;一、htseq-count参数简介&quot;&gt;&lt;/a&gt;一、htseq-count参数简介&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 用法概述&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;usage: htseq-count [options] alignment_file gff_file&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -h参数可显示帮助列表&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -h, --&lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt;            show this &lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt; message and &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -f参数指定输入文件格式类型，默认文件类型为sam&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -f &amp;#123;sam,bam&amp;#125;, --format &amp;#123;sam,bam&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -r参数指定文件的排序方式，pos:按照染色体位置排序，name:按照read名称进行排序。双端测序数据必选参数，默认值为name。对于单端测序数据，该选项可以忽略&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -r &amp;#123;pos,name&amp;#125;, --order &amp;#123;pos,name&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 当-r参数设定为pos，该选项可以选择最大内存，该参数对单端测序数据无效&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --max-reads-in-buffer MAX_BUFFER_SIZE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -s参数指定数据建库的链特异性情况，默认值为yes。对于双端测序数据，大多数为非链特异性建库&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -s &amp;#123;yes,no,reverse&amp;#125;, --stranded &amp;#123;yes,no,reverse&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -a参数指定最低read mapping质量值，低于&amp;lt;minaqual&amp;gt;值会被过滤掉（默认值为10）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -a MINAQUAL, --minaqual MINAQUAL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -t参数指定指定最小计数单位类型，（GFF文件中的第三列：如exon），当RNA-seq分析采用 Ensembl GTF 文件类型时，默认值是exon           &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -t FEATURETYPE, --&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; FEATURETYPE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -i参数指定最终作为特征id的值，当分析采用Ensembl GTF文件类型是，默认值是gene_id&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -i IDATTR, --idattr IDATTR&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --additional-attr ADDITIONAL_ATTR [ADDITIONAL_ATTR ...]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        Additional feature attributes (default: none, suitable&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; Ensembl GTF files: gene_name) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -m参数指定判断一个reads属于某个基因的模型，用来判断统计reads的时候对一些比较特殊的reads定义是否计入。&amp;lt;mode&amp;gt; 包括：默认的union和intersection-strict、 intersection-nonempty  （默认：union） &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -m &amp;#123;union,intersection-strict,intersection-nonempty&amp;#125;, --mode &amp;#123;union,intersection-strict,intersection-nonempty&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        mode to handle reads overlapping more than one feature&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        (choices: union, intersection-strict, intersection-&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        nonempty; default: union)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --nonunique &amp;#123;none,all&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        Whether to score reads that are not uniquely aligned&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        or ambiguously assigned to features&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --secondary-alignments &amp;#123;score,ignore&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        Whether to score secondary alignments (0x100 flag)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  --supplementary-alignments &amp;#123;score,ignore&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        Whether to score supplementary alignments (0x800 flag)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -o SAMOUTS [SAMOUTS ...], --samout SAMOUTS [SAMOUTS ...]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        write out all SAM alignment records into an output SAM&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        file called SAMOUT, annotating each line with its&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        feature assignment (as an optional field with tag&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&#39;XF&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -q, --quiet           suppress progress report&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Bioinformatics" scheme="http://yoursite.com/categories/Bioinformatics/"/>
    
    
  </entry>
  
  <entry>
    <title>RNA-seq数据分析实例（胶质瘤）</title>
    <link href="http://yoursite.com/2017/08/10/RNA-seq%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E4%BE%8B%EF%BC%88%E8%83%B6%E8%B4%A8%E7%98%A4%EF%BC%89/"/>
    <id>http://yoursite.com/2017/08/10/RNA-seq数据分析实例（胶质瘤）/</id>
    <published>2017-08-10T08:18:00.000Z</published>
    <updated>2017-09-07T11:24:20.865Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、下载比对参考基因组文件，为HISAT2配置index"><a href="#一、下载比对参考基因组文件，为HISAT2配置index" class="headerlink" title="一、下载比对参考基因组文件，为HISAT2配置index"></a><strong>一、下载比对参考基因组文件，为HISAT2配置index</strong></h3><p>配置index需要基因组注释文件（通常为gtf格式）以及基因组序列文件（fasta格式）。多个数据库提供此注释文件，此处采用ensemble提供的文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 从ensemble中下载最新版本的人类基因组注释文件（gtf格式）</span></div><div class="line">wget ftp://ftp.ensembl.org/pub/release-89/gtf/homo_sapiens/Homo_sapiens.GRCh38.89.gtf.gz</div><div class="line"></div><div class="line"><span class="comment"># 下载人类基因组序列</span></div><div class="line">wget ftp://ftp.ensembl.org/pub/current_fasta/homo_sapiens/dna_index/Homo_sapiens.GRCh38.dna.toplevel.fa.gz</div><div class="line"></div><div class="line"><span class="comment">#配置HISAT2的index</span></div><div class="line">hisat2-build -p 8 Homo_sapiens.GRCh38.dna.toplevel.fa GRCh38_ensembl_dna 1&gt;build_index.log&amp;</div><div class="line"></div><div class="line"><span class="comment">#配置index用时约2小时，结果文件为下图所示</span></div></pre></td></tr></table></figure><p><img src="http://static.zybuluo.com/oxygenjing/3s9i30ms3eb24jr9w9hcsir9/hisat_index.png" alt="hisat_index.png-24.4kB"></p><h3 id="二、下载sra数据"><a href="#二、下载sra数据" class="headerlink" title="二、下载sra数据"></a><strong>二、下载sra数据</strong></h3><p>进入GEO页面输入id号，进入sra study的ftp下载页面，复制sra文件的链接，在linux下执行以下命令进行下载。</p><p><img src="http://static.zybuluo.com/oxygenjing/spy22n0j6uk0efhu6wm4a9le/image_1bnhvvb621t1m65f1e3137618cdm.png" alt="image_1bnhvvb621t1m65f1e3137618cdm.png-65.5kB"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup wget -c [文件链接] &gt; download.log&amp;</div></pre></td></tr></table></figure><h3 id="三、将sra文件转换成fastq-gz格式"><a href="#三、将sra文件转换成fastq-gz格式" class="headerlink" title="三、将sra文件转换成fastq.gz格式"></a><strong>三、将sra文件转换成fastq.gz格式</strong></h3><p>每秒可生产1M文件，工具不支持多线程。<br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#对文件夹下的所有sra文件批量处理</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> *sra</div><div class="line"><span class="keyword">do</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$i</span></div><div class="line"><span class="comment"># 对于双端测序数据，需要加--split-3参数，每样本处理约10min</span></div><div class="line">fastq-dump --split-3 <span class="variable">$i</span> --gzip </div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure></p><p>每个sra文件会产生两个<code>fastq.gz</code>文件，名称分别为<code>*_1.fastq.gz</code>和<code>*_2.fastq.gz</code></p><h3 id="四、对fastq数据进行质控"><a href="#四、对fastq数据进行质控" class="headerlink" title="四、对fastq数据进行质控"></a><strong>四、对fastq数据进行质控</strong></h3><p>使用fastqc(项目主页<a href="http://www.bioinformatics.babraham.ac.uk/projects/fastqc/" target="_blank" rel="external">在此</a>)进行质量控制，代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> id <span class="keyword">in</span> *fastq</div><div class="line"><span class="keyword">do</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$id</span></div><div class="line"><span class="comment"># 此处使用8线程，平均每文件处理约10min</span></div><div class="line">/home/RNAseq_tool/FastQC/fastqc -t 8 <span class="variable">$id</span> -o /data/GSE86202/0.fastqc/</div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure><p>得到一个html格式报告以及包含html及表格形式报告的压缩包。其中html文件可以看出数据质量。以<code>SRR4095543_1.fastq</code>为例，下图是其原始序列质量，可看出测序质量较高。</p><p><img src="http://static.zybuluo.com/oxygenjing/mj1p35lzix8vy0c2ttw537o1/image_1bn2ejpoj1ajt1eum1bq8uob47j9.png" alt="image_1bn2ejpoj1ajt1eum1bq8uob47j9.png-62.2kB"></p><p>但是其在5’端存在adapter，从下图可以看出。<br><img src="http://static.zybuluo.com/oxygenjing/obb1u529xn6b1d3kex9ewo6f/image_1bn2en6hohnb289qr01b1a14slt.png" alt="image_1bn2en6hohnb289qr01b1a14slt.png-92.9kB"></p><p>因此需要切除5’端接头，此处选择切除10bp。</p><h3 id="五、接头处理并再次质控"><a href="#五、接头处理并再次质控" class="headerlink" title="五、接头处理并再次质控"></a><strong>五、接头处理并再次质控</strong></h3><p>使用cutadapt（<a href="https://pypi.python.org/pypi/cutadapt/1.2.1" target="_blank" rel="external">项目主页</a>）进行接头处理，代码如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> id <span class="keyword">in</span> *fastq</div><div class="line"><span class="keyword">do</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$id</span></div><div class="line"><span class="comment"># 切除序列5'前10个碱基，每个文件处理约5min</span></div><div class="line">cutadapt -u 10 -o /data/GSE86202/cut_<span class="variable">$id</span> <span class="variable">$id</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure></p><p><strong>注意：在实际流程中，原始数据可能存在各种各样的问题，需要根据fastqc质控结果按需处理。本例中的处理方式仅对本数据有效。</strong></p><p>再次质控结果：<br><img src="http://static.zybuluo.com/oxygenjing/9vvu3n4mrwmcecdbii6lei5k/image_1bn2f83491g52nste3lmkksov1a.png" alt="image_1bn2f83491g52nste3lmkksov1a.png-83.5kB"></p><p>可以看到每个碱基的碱基组成趋于正常。</p><h3 id="六、序列比对"><a href="#六、序列比对" class="headerlink" title="六、序列比对"></a><strong>六、序列比对</strong></h3><p>本例使用<strong>HISAT2</strong>进行序列比对，其速度更快且精度更高，是Tophat的优秀替代工具。比对代码如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">DATA_PATH=/data/GSE86202/1.cutadapt</div><div class="line">REF_PATH=/data/reference_data</div><div class="line">OUT_PATH=/data/GSE86202/4.hisat2</div><div class="line">FILE=/data/GSE86202/filelist.txt</div><div class="line"><span class="built_in">cd</span> <span class="variable">$DATA_PATH</span></div><div class="line">cat <span class="variable">$FILE</span> | <span class="keyword">while</span> <span class="built_in">read</span> line</div><div class="line"><span class="keyword">do</span></div><div class="line">hisat2 -x <span class="variable">$REF_PATH</span>/hisat_GRCh38 --no-mixed -1 <span class="variable">$DATA_PATH</span>/cut_<span class="variable">$&#123;line&#125;</span>_1.fastq -2 </div><div class="line"><span class="comment">#将HISAT2处理的结果输出到samtools转化为bam格式</span></div><div class="line"><span class="comment">#此处使用6核，约使用6.4G内存，平均每文件处理需30min</span></div><div class="line"><span class="variable">$DATA_PATH</span>/cut_<span class="variable">$&#123;line&#125;</span>_2.fastq -p 6 |samtools view -bS 1&gt;<span class="variable">$OUT_PATH</span>/<span class="variable">$&#123;line&#125;</span>.bam</div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure><h3 id="七、对bam文件排序"><a href="#七、对bam文件排序" class="headerlink" title="七、对bam文件排序"></a><strong>七、对bam文件排序</strong></h3><p>使用samtools（<a href="http://samtools.sourceforge.net/" target="_blank" rel="external">项目主页</a>）对bam文件进行排序并添加index<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">FILE_PATH=/data/GSE86202/4.hisat2</div><div class="line">OUT_PATH=/data/GSE86202/5.samtools</div><div class="line"><span class="built_in">cd</span> <span class="variable">$FILE_PATH</span></div><div class="line"><span class="keyword">for</span> file <span class="keyword">in</span> *.bam</div><div class="line"><span class="keyword">do</span></div><div class="line"><span class="comment"># 对bam文件进行排序（-n参数必须，表示按照read name进行排序）</span></div><div class="line">    samtools sort -n <span class="variable">$FILE_PATH</span>/<span class="variable">$&#123;file&#125;</span> -o <span class="variable">$OUT_PATH</span>/sorted_<span class="variable">$&#123;file&#125;</span> -@ 6</div><div class="line"></div><div class="line"><span class="comment"># 对已经排序的bam文件进行简单质量控制</span></div><div class="line">    samtools flagstat <span class="variable">$OUT_PATH</span>/sorted_<span class="variable">$&#123;file&#125;</span> -@ 6 &gt; <span class="variable">$OUT_PATH</span>/<span class="variable">$&#123;file&#125;</span>.<span class="built_in">stat</span></div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line"><span class="comment"># 质控后得到结果如下图所示</span></div></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/oxygenjing/b5fyi2qkp5av19m7a9jhkogm/image_1bni0nvdg1ru6c8g1dmmpv0mnr13.png" alt="image_1bni0nvdg1ru6c8g1dmmpv0mnr13.png-50kB"></p><p>可看到比对结果良好。</p><h3 id="八、使用htseq得到count值"><a href="#八、使用htseq得到count值" class="headerlink" title="八、使用htseq得到count值"></a><strong>八、使用htseq得到count值</strong></h3><p>使用RSeQC进行对bam文件的简单质控和各项参数的检查<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">FILE_PATH=/data/GSE86202/5.samtools/gencode_genome</div><div class="line">REF_PATH=/data/reference_data/gtf</div><div class="line">OUT_PATH=/data/GSE86202/10.htseq/gencode_genome</div><div class="line"><span class="built_in">cd</span> <span class="variable">$FILE_PATH</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 42..47`</div><div class="line"><span class="keyword">do</span></div><div class="line">    nohup htseq-count -t exon -s reverse \</div><div class="line">    -r name -f bam <span class="variable">$FILE_PATH</span>/name_new_SRR40955<span class="variable">$&#123;i&#125;</span>.bam \</div><div class="line">    <span class="variable">$REF_PATH</span>/gencode.v26.annotation.gtf \</div><div class="line">    &gt; <span class="variable">$OUT_PATH</span>/name_new_SRR40955<span class="variable">$&#123;i&#125;</span>.bam.count \</div><div class="line">    &gt; SRR40955<span class="variable">$&#123;i&#125;</span>_count.log 2&gt;&amp;1 &amp;</div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure></p><p>得到count值文件数与样本数据数量相等，为两列值（如下图所示），其中包括了测序数据覆盖gene的ensemble号及count值。</p><p><img src="http://static.zybuluo.com/oxygenjing/cneczjpj4ruad3puui5231zp/image_1bni91970eac128789jmstl4o9.png" alt="image_1bni91970eac128789jmstl4o9.png-56.4kB"></p><p>写perl脚本<code>combine_count.pl</code>将所有count值进行合并，<br>合并文件如下图所示：</p><p><img src="http://static.zybuluo.com/oxygenjing/drg6y261b4pychfrhmqo9qlu/%E6%8D%95%E8%8E%B7.PNG" alt="捕获.PNG-38.1kB"></p><h3 id="九、使用R及count矩阵进行差异分析"><a href="#九、使用R及count矩阵进行差异分析" class="headerlink" title="九、使用R及count矩阵进行差异分析"></a><strong>九、使用R及count矩阵进行差异分析</strong></h3><p>count矩阵数据可以直接使用R中<code>DEseq2</code>包进行差异分析、GO分析以及pathway分析。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、下载比对参考基因组文件，为HISAT2配置index&quot;&gt;&lt;a href=&quot;#一、下载比对参考基因组文件，为HISAT2配置index&quot; class=&quot;headerlink&quot; title=&quot;一、下载比对参考基因组文件，为HISAT2配置index&quot;&gt;&lt;/a&gt;&lt;strong&gt;一、下载比对参考基因组文件，为HISAT2配置index&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;配置index需要基因组注释文件（通常为gtf格式）以及基因组序列文件（fasta格式）。多个数据库提供此注释文件，此处采用ensemble提供的文件。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 从ensemble中下载最新版本的人类基因组注释文件（gtf格式）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;wget ftp://ftp.ensembl.org/pub/release-89/gtf/homo_sapiens/Homo_sapiens.GRCh38.89.gtf.gz&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 下载人类基因组序列&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;wget ftp://ftp.ensembl.org/pub/current_fasta/homo_sapiens/dna_index/Homo_sapiens.GRCh38.dna.toplevel.fa.gz&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#配置HISAT2的index&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hisat2-build -p 8 Homo_sapiens.GRCh38.dna.toplevel.fa GRCh38_ensembl_dna 1&amp;gt;build_index.log&amp;amp;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#配置index用时约2小时，结果文件为下图所示&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://static.zybuluo.com/oxygenjing/3s9i30ms3eb24jr9w9hcsir9/hisat_index.png&quot; alt=&quot;hisat_index.png-24.4kB&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;二、下载sra数据&quot;&gt;&lt;a href=&quot;#二、下载sra数据&quot; class=&quot;headerlink&quot; title=&quot;二、下载sra数据&quot;&gt;&lt;/a&gt;&lt;strong&gt;二、下载sra数据&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;进入GEO页面输入id号，进入sra study的ftp下载页面，复制sra文件的链接，在linux下执行以下命令进行下载。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.zybuluo.com/oxygenjing/spy22n0j6uk0efhu6wm4a9le/image_1bnhvvb621t1m65f1e3137618cdm.png&quot; alt=&quot;image_1bnhvvb621t1m65f1e3137618cdm.png-65.5kB&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;nohup wget -c [文件链接] &amp;gt; download.log&amp;amp;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;三、将sra文件转换成fastq-gz格式&quot;&gt;&lt;a href=&quot;#三、将sra文件转换成fastq-gz格式&quot; class=&quot;headerlink&quot; title=&quot;三、将sra文件转换成fastq.gz格式&quot;&gt;&lt;/a&gt;&lt;strong&gt;三、将sra文件转换成fastq.gz格式&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;每秒可生产1M文件，工具不支持多线程。&lt;br&gt;
    
    </summary>
    
      <category term="Bioinformatics" scheme="http://yoursite.com/categories/Bioinformatics/"/>
    
    
  </entry>
  
  <entry>
    <title>RNA-seq分析所用生信工具安装详细记录</title>
    <link href="http://yoursite.com/2017/08/05/RNA-seq%E5%88%86%E6%9E%90%E6%89%80%E7%94%A8%E7%94%9F%E4%BF%A1%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%A6%E7%BB%86%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2017/08/05/RNA-seq分析所用生信工具安装详细记录/</id>
    <published>2017-08-05T03:18:00.000Z</published>
    <updated>2017-09-07T11:24:58.408Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-测试服务器设定"><a href="#一-测试服务器设定" class="headerlink" title="一.测试服务器设定"></a>一.测试服务器设定</h3><p>1.使登录后自动进入/home目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vim ~/.bashrc</div><div class="line"><span class="comment">#在文件中加入以下行后保存退出</span></div><div class="line"><span class="built_in">cd</span> /home</div></pre></td></tr></table></figure></p><p>2.新建RNAseq_tool文件夹，存放各工具<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir RNAseq_tool</div></pre></td></tr></table></figure></p><a id="more"></a><h3 id="二-各生信工具在测试服务器下的安装"><a href="#二-各生信工具在测试服务器下的安装" class="headerlink" title="二.各生信工具在测试服务器下的安装"></a>二.各生信工具在测试服务器下的安装</h3><p>1.sratoolkit下载及安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#下载并解压</span></div><div class="line">wget <span class="string">"ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/current/sratoolkit.current-centos_linux64.tar.gz"</span></div><div class="line">tar -xzf sratoolkit.current-centos_linux64.tar.gz</div><div class="line"><span class="comment">#进入bin目录</span></div><div class="line"><span class="built_in">cd</span> [download_location]/sratoolkit[version]/bin/</div><div class="line"><span class="comment">#设置path并使其生效</span></div><div class="line">vi /etc/profile</div><div class="line">增加以下行</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/home/RNAseq_tool/sratoolkit.2.8.2-ubuntu64/bin</div><div class="line">vi /etc/environment</div><div class="line">增加以下行：</div><div class="line">PATH=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/RNAseq_tool/sratoolkit.2.8.2-1-ubuntu64/bin"</span></div><div class="line"><span class="built_in">source</span> /etc/profile</div><div class="line"><span class="built_in">source</span> /etc/enviroment</div><div class="line"><span class="comment">#测试安装是否成功</span></div><div class="line">fastq-dump –version</div><div class="line"><span class="comment">#运行案例</span></div><div class="line">fastq-dump -X 5 -Z SRR390728</div></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/oxygenjing/wv86pztzhvwzzdcibkz8h608/image_1bmomd1lskq8mkhg218d26ac13.png" alt="image_1bmomd1lskq8mkhg218d26ac13.png-37.6kB"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#配置SRAtoolkit的下载路径</span></div><div class="line">[安装路径]/bin/vdb-config –i 设定下载路径</div></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/oxygenjing/4z367ah9fd580cr111xrf9tr/image_1bmolqd3na58rmg1jnsf9hc3em.png" alt="image_1bmolqd3na58rmg1jnsf9hc3em.png-61.8kB"></p><p>2.fastqc下载及安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#fastqc需要java环境，首先下载并配置java，此处下载 jre1.8.0_144</span></div><div class="line">wget http://javadl.oracle.com/webapps/download/AutoDL?BundleId=225345_090f390dda5b47b9b721c7dfaa008135</div><div class="line"></div><div class="line"><span class="comment">#进入安装目录解压</span></div><div class="line">tar –xzvf jre-8u144-linux-x64.tar.gz</div><div class="line"></div><div class="line"><span class="comment">#配置java的环境变量</span></div><div class="line">vi /etc/profile</div><div class="line">添加以下行</div><div class="line">JAVA_HOME=/usr/java/jre1.8.0_144/</div><div class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib:<span class="variable">$CLASSPATH</span></div><div class="line"><span class="built_in">export</span> PATH = <span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</div><div class="line"></div><div class="line">vi /etc/environment</div><div class="line">添加java安装目录，此时文件内容为：</div><div class="line">PATH=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/RNAseq_tool/sratoolkit.2.8.2-1-ubuntu64/bin:/usr/java/jre1.8.0_144/bin"</span></div><div class="line"></div><div class="line"><span class="comment">#下载及解压</span></div><div class="line">wget http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.5.zip</div><div class="line">unzip fastqc_v0.11.5.zip</div><div class="line"><span class="built_in">cd</span> FastQC</div><div class="line"></div><div class="line"><span class="comment">#添加执行权限</span></div><div class="line">chmod 755 fastqc</div><div class="line"></div><div class="line"><span class="comment">#建立软连接</span></div><div class="line">ln -s [download_location]/FastQC/fastqc /usr/<span class="built_in">local</span>/bin/fastqc</div><div class="line"></div><div class="line"><span class="comment">#测试fastqc是否正常运行</span></div><div class="line">fastqc SRR390728.fastq <span class="comment">#运行结果如下图所示</span></div></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/oxygenjing/xvvik9xyg5h5is7jx60k2zaq/image_1bmon27cdomgpmhrnt1unu1cgp1g.png" alt="image_1bmon27cdomgpmhrnt1unu1cgp1g.png-10kB"><br>处理好的SRR390728_fastqc.html可以通过WinSCP下载到Windows系统上进行查看。</p><p>3.cutadapt下载及安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#安装python-pip，python-dev</span></div><div class="line">apt-get install python-pip python-dev</div><div class="line"><span class="comment">#使用pip安装cutadapt，该方法将cutadapt二进制文件安装到./usr/.local/bin中,无需设置环境变量</span></div><div class="line">pip install --user --upgrade cutadapt</div><div class="line"><span class="comment">#尝试运行</span></div><div class="line">cutadapt --version</div></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/oxygenjing/ex543ebun3ocqnh0v0s9ecj2/image_1bmonjuh7f836du53d16vbhko1t.png" alt="image_1bmonjuh7f836du53d16vbhko1t.png-164.9kB"><br>4.fastx-toolkit下载及安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#下载并安装依赖库libgtextutils 0.7</span></div><div class="line">wget https://github.com/agordon/libgtextutils/releases/download/0.7/libgtextutils-0.7.tar.gz</div><div class="line">tar –xzvf libgtextutils-0.7.tar.gz</div><div class="line"><span class="comment">#进入解压后文件夹进行编译安装</span></div><div class="line">./configure</div><div class="line">make</div><div class="line">make install</div><div class="line"><span class="comment">#下载并解压fastx 0.0.14：</span></div><div class="line">wget https://github.com/agordon/fastx_toolkit/releases/download/0.0.14/fastx_toolkit-0.0.14.tar.bz2</div><div class="line">tar –xjvf fastx_toolkit-0.0.14.tar.bz2</div><div class="line"><span class="comment">#进入解压后文件夹进行编译安装</span></div><div class="line">./configure</div><div class="line">make</div><div class="line">make install</div><div class="line"><span class="comment">#配置环境变量</span></div><div class="line">vi /etc/profile</div><div class="line">添加如下行</div><div class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/usr/<span class="built_in">local</span>/lib:<span class="variable">$LD_LIBRARY_PATH</span></div></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/oxygenjing/zhnkyov7ls5r7j2wc03bnq4s/image_1bmonpvcekhteev1rjh1c76rmq2a.png" alt="image_1bmonpvcekhteev1rjh1c76rmq2a.png-38.3kB"></p><p>5.安装bowtie2(旧流程）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#安装依赖包libtbb2</span></div><div class="line">apt-get install libtbb2</div><div class="line"><span class="comment">#下载并解压bowtie2</span></div><div class="line">wget https://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.3.2/bowtie2-2.3.2-linux-x86_64.zip/download</div><div class="line">unzip bowtie2-2.3.2-linux-x86_64.zip</div><div class="line"><span class="comment">#配置环境变量</span></div><div class="line">vi /etc/profile</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>://home/RNAseq_tool/bowtie2-2.3.2</div></pre></td></tr></table></figure></p><p>6.安装Tophat2（旧流程）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#下载并解压</span></div><div class="line">wget http://ccb.jhu.edu/software/tophat/downloads/tophat-2.1.1.Linux_x86_64.tar.gz</div><div class="line">tar –xzvf tophat-2.1.1.Linux_x86_64.tar.gz</div><div class="line"><span class="comment">#添加软连接</span></div><div class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</div><div class="line">ln –s /home/RNAseq_tool/tophat-2.1.1.Linux_x86_64/tophat2</div><div class="line"><span class="comment">#测试tophat2</span></div><div class="line"><span class="comment">#下载并解压测试数据</span></div><div class="line">wget http://ccb.jhu.edu/software/tophat/downloads/test_data.tar.gz</div><div class="line">tar –xzvf test_data.tar.gz</div><div class="line"><span class="comment">#测试：（实际使用时需要额外生成index文件）</span></div><div class="line"><span class="built_in">cd</span> test_data</div><div class="line">tophat2 -r 20 test_ref reads_1.fq reads_2.fq</div></pre></td></tr></table></figure></p><p>7.安装HISAT2（Tophat替代工具）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#下载源码并解压</span></div><div class="line">wget http://ccb.jhu.edu/software/hisat2/downloads/hisat2-2.0.0-beta-source.zip</div><div class="line">unzip hisat2-2.0.0-beta-source.zip</div><div class="line"><span class="comment">#进入解压后目录并编译安装</span></div><div class="line"><span class="built_in">cd</span> hisat2-2.0.0-beta/</div><div class="line">make</div><div class="line"><span class="comment">#添加环境变量并使其立即生效</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/home/RNAseq_tool/hisat2-2.0.0-beta</div><div class="line"><span class="built_in">source</span> ~/.bashrc</div><div class="line"><span class="comment">#试运行</span></div><div class="line">hisat2</div></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/oxygenjing/xka6x0oo7dttc9xsl244qu2x/hisat4.png" alt="hisat4.png-45.1kB"></p><p>8.安装samtools<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#下载依赖库：libncurses5-dev, zlib1g-dev libbz2-dev liblzma-dev</span></div><div class="line">apt-get install libncurses5-dev zlib1g-dev libbz2-dev liblzma-dev</div><div class="line"><span class="comment">#下载samtools 1.5，bcftools 1.5，htslib 1.5：</span></div><div class="line">wget https://github.com/samtools/samtools/releases/download/1.5/samtools-1.5.tar.bz2</div><div class="line">wget https://github.com/samtools/bcftools/releases/download/1.5/bcftools-1.5.tar.bz2</div><div class="line">wget https://github.com/samtools/htslib/releases/download/1.5/htslib-1.5.tar.bz2</div><div class="line"><span class="comment">#安装三个工具（分别进入各工具文件夹，进行编译安装，顺序：htslib&gt;bcftools&gt;samtools）</span></div><div class="line">./configure</div><div class="line">make</div><div class="line">make install</div><div class="line"><span class="comment">#注：编译安装默认路径为/usr/local/bin，所以无需添加环境变量</span></div><div class="line"><span class="comment">#测试安装</span></div><div class="line">samtools</div></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/oxygenjing/k2idkpjgssxzsi22ejki7407/samtools.png" alt="samtools.png-8.5kB"></p><p>9.安装RSeQC(用于对bam文件进行质控,项目主页：<a href="http://rseqc.sourceforge.net/）" target="_blank" rel="external">http://rseqc.sourceforge.net/）</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Python2.7环境下</span></div><div class="line">pip install RSeQC</div></pre></td></tr></table></figure></p><p>其由许多功能脚本组成，具体可以看官网信息（<a href="http://rseqc.sourceforge.net/）" target="_blank" rel="external">http://rseqc.sourceforge.net/）</a></p><p>10.安装HTseq（项目主页：<a href="http://htseq.readthedocs.io/en/release_0.9.1/）" target="_blank" rel="external">http://htseq.readthedocs.io/en/release_0.9.1/）</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 安装依赖</span></div><div class="line">sudo apt-get install build-essential python2.7-dev </div><div class="line">python-numpy python-matplotlib python-pysam python-htseq</div><div class="line"><span class="comment"># Python2.7环境下</span></div><div class="line">pip install HTSeq</div><div class="line"><span class="comment">#常用功能展示</span></div><div class="line">htseq-count -h</div></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/oxygenjing/nuhdcwwo4cqgp4u9erd7tyjo/image_1bn34j1bhnonfng1ha81j5d1f89m.png" alt="image_1bn34j1bhnonfng1ha81j5d1f89m.png-107.3kB"></p><p>11.安装bedtools<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#下载并解压</span></div><div class="line">wget https://github.com/arq5x/bedtools2/releases/download/v2.26.0/bedtools-2.26.0.tar.gz</div><div class="line">tar –xzvf bedtools-2.26.0.tar.gz</div><div class="line"><span class="comment">#进入解压后文件目录进行编译安装</span></div><div class="line">make</div><div class="line">make install</div><div class="line"><span class="comment">#测试安装</span></div><div class="line">bedtools --version</div></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/oxygenjing/oo4j190jwj6vo1xkqd69p04k/bedtools.png" alt="bedtools.png-1.6kB"></p><p>12.安装cufflinks（旧流程）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#下载并解压</span></div><div class="line">wget http://cole-trapnell-lab.github.io/cufflinks/assets/downloads/cufflinks-2.2.1.Linux_x86_64.tar.gz</div><div class="line">tar –xzvf cufflinks-2.2.1.Linux_x86_64.tar.gz</div><div class="line"><span class="comment">#将目录添加至环境变量中</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/home/RNAseq_tool/cufflinks-2.2.1.Linux_x86_64</div><div class="line"><span class="comment">#测试安装</span></div><div class="line">cufflinks</div></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/oxygenjing/buv71vxsf1fpv6vog6c6s8f8/cufflinks.png" alt="cufflinks.png-9.2kB"></p><p>13.安装stringtie（cufflinks替代文件，项目主页<a href="https://ccb.jhu.edu/software/stringtie/" target="_blank" rel="external">在此</a>）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#下载并解压</span></div><div class="line">wget http://ccb.jhu.edu/software/stringtie/dl/stringtie-1.3.3b.Linux_x86_64.tar.gz</div><div class="line">tar -zxvf stringtie-1.3.3b.Linux_x86_64.tar.gz</div><div class="line"></div><div class="line"><span class="comment">#添加目录至系统环境变量</span></div><div class="line">vim /etc/profile</div><div class="line">添加如下行</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/home/RNAseq_tool/stringtie-1.3.3b.Linux_x86_64</div><div class="line"></div><div class="line"><span class="comment">#试运行，如果如下图</span></div></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/oxygenjing/qg34qhylv3xnplwcdlrdqfiv/image_1bn347oqm1fp21i2481rcjja289.png" alt="image_1bn347oqm1fp21i2481rcjja289.png-155.3kB"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一-测试服务器设定&quot;&gt;&lt;a href=&quot;#一-测试服务器设定&quot; class=&quot;headerlink&quot; title=&quot;一.测试服务器设定&quot;&gt;&lt;/a&gt;一.测试服务器设定&lt;/h3&gt;&lt;p&gt;1.使登录后自动进入/home目录下&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;vim ~/.bashrc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#在文件中加入以下行后保存退出&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /home&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.新建RNAseq_tool文件夹，存放各工具&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mkdir RNAseq_tool&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Bioinformatics" scheme="http://yoursite.com/categories/Bioinformatics/"/>
    
    
  </entry>
  
  <entry>
    <title>vcf文件详解</title>
    <link href="http://yoursite.com/2017/01/11/vcf%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2017/01/11/vcf文件详解/</id>
    <published>2017-01-11T10:18:00.000Z</published>
    <updated>2017-09-07T10:49:00.978Z</updated>
    
    <content type="html"><![CDATA[<p>vcf具有表头部分和正文部分，其中表头部分是对正文部分中出现的缩写的解释。</p><p>vcf的正文部分，必须要有的是前面8列，一般来说有10列，分别是：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">CHROM</div><div class="line">POS</div><div class="line">ID</div><div class="line">REF</div><div class="line">ALT</div><div class="line">QUAL</div><div class="line">FILTER [来自于<span class="comment">##FILTER]</span></div><div class="line">INFO</div><div class="line">FORMAT</div><div class="line">可能会有样本的名称</div></pre></td></tr></table></figure></p><p><code>CHROM 和 POS</code>：参考序列名和variant的位置；如果是INDEL的话，位置是INDEL的第一个碱基位置。</p><p><code>ID</code>：variant的ID。比如在dbSNP中有该SNP的id，则会在此行给出；若没有，则用”.”表示其为一个novel variant。</p><p><code>REF 和 ALT</code>：参考序列的碱基 和 Variant的碱基。</p><p><code>QUAL</code>：Phred格式(Phred_scaled)的质量值，表 示在该位点存在variant的可能性；该值越高，则variant的可能性越大；计算方法：<code>Phred值 = -10 * log (1-p)</code>。 p为variant存在的概率; 通过计算公式可以看出值为10的表示错误概率为0.1，该位点为variant的概率为90%。</p><p><code>FILTER</code>：使用上一个QUAL值来进行过滤的话，是不够的。GATK能使用其它的方法来进行过滤，过滤结果中通过则该值为”PASS”;若variant不可靠，则该项不为”PASS”或”.”。</p><p><code>INFO</code>：这一行是variant的详细信息，内容很多，以下再具体详述。</p><p><code>FORMAT 和 TTG11B</code>：这两行合起来提供了’TTG11B′这个sample的基因型的信息。’TTG11B′代表这该名称的样品，是由BAM文件中的@RG下的 SM 标签决定的。<br><a id="more"></a><br>前面7列阐明该变异位点位于参考基因组的哪条染色体，哪个位置，是否被数据库给标记了ID(通常说的是dbSNP)，该位置的参考基因组是什么碱基，这个变异位点变异成了什么碱基。找到这个变异的软件给它的质量值是多少，是否合格。</p><p>第8列 INFO 比较复杂，包含信息最多，看起来是一列，但是里面可以根据字段拆分成多列，都是 “TAG=Value”的形式,并使用”;”分隔。其中很多的TAG含义在VCF文件的头部注释信息##INFO中已给出。</p><p><img src="http://static.zybuluo.com/oxygenjing/x3nje4zpyf00hldson9gy9rk/image_1b5mui0q61dc71udsbp61qo8106lt.png" alt="image_1b5mui0q61dc71udsbp61qo8106lt.png-96.2kB"></p><p>常见的TAG有：</p><p><strong>AC，AF 和，AN</strong>[A开头的多和等位基因有关]：</p><blockquote><p> AC(Allele Count) 表示该等位基因的数目；<br>    AF(Allele Frequency) 表示等位基因的频率；<br>    AN(Allele Number) 表示等位基因的总数目。</p></blockquote><p>对于1个diploid sample[二倍体样本]而言：</p><blockquote><p><strong>基因型 0/1</strong><br>表示sample为杂合子，等位基因数为1(双倍体的sample在该位点只有1个等位基因发生了突变)，等位基因的频率为0.5(双倍体的<br>sample在该位点只有50%的等位基因发生了突变)，总的等位基因为2；</p><p><strong>基因型 1/1</strong><br>表示sample为纯合的，等位基因数为2，等位基因的频率为1，总的等位基因为2。</p></blockquote><p><strong>DP</strong>：reads覆盖度。是一些reads被过滤掉后的覆盖度。[注意，第八列和第九列都有DP，都表示该位点覆盖深度的信息，但是详细意义可能是不同的大家可以探究一下，在head里面就可以找到相应信息]</p><p><strong>Dels</strong>：进行SNP和INDEL calling的结果中，有该TAG并且值为0表示该位点为SNV，没有则为INDEL。[<strong>可以根据这个tag分离indel和snv</strong>]</p><p><strong>第9列信息</strong>：位点的基因型，测序深度的描述，一般有两列内容，前者为格式，后者为格式对应的数据。</p><p><img src="http://static.zybuluo.com/oxygenjing/vuf7jfb25b0s3ni377t5gmlp/image_1b5mud4871vbpuvn4uunru1i08g.png" alt="image_1b5mud4871vbpuvn4uunru1i08g.png-164.9kB"></p><p>第九列包含标签有<code>GT,DP,FT,GL,PL,GP</code>等等，这些标签的含义可以在该vcf文件的表头里面找到。即vcf文件中以 ##FORMAT 开头的部分</p><p><strong>GT</strong>：</p><blockquote><p>样品的基因型（genotype）。两个数字中间用’/“分 开，这两个数字表示双倍体的sample的基因型。0表示样品中有ref的allele； 1 表示样品中variant的allele； 2表示有第二个variant的allele。</p><p>因此： 0/0表示sample中该位点为纯合的，和ref一致； 0/1 表示sample中该位点为杂合的，有ref和variant两个基因型； 1/1<br>表示sample中该位点为纯合的，和variant一致。</p></blockquote><p><strong>AD 和 DP</strong>：</p><blockquote><p>AD(Allele Depth)为sample中每一种allele的reads覆盖度,在diploid中则是用逗号分割的两个值，前者对应ref基因型，后者对应variant基因型；</p><p>DP（Depth）为sample中该位点的覆盖度(一些reads被过滤掉的覆盖度)。</p></blockquote><p><strong>GQ</strong>：</p><blockquote><p>基因型的质量值(Genotype Quality)。Phred格式(Phred_scaled)的质量值，表示在该位点该基因型存在的可能性；该值越高，则Genotype的可能性越大；计算方法：Phred值 = -10 * log (1-p) p为基因型存在的概率。</p></blockquote><p><strong>PL</strong></p><blockquote><p>指定三种基因型的质量值。这三种指定的基因型为(0/0,0/1,1/1)，这三种基因型的概率总和为1。该值越大，表明为该种基因型的可能性越小。 Phred值 = -10 * log (p) p为基因型存在的概率。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vcf具有表头部分和正文部分，其中表头部分是对正文部分中出现的缩写的解释。&lt;/p&gt;
&lt;p&gt;vcf的正文部分，必须要有的是前面8列，一般来说有10列，分别是：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;CHROM&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;POS&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ID&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;REF&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ALT&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;QUAL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;FILTER [来自于&lt;span class=&quot;comment&quot;&gt;##FILTER]&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;INFO&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;FORMAT&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;可能会有样本的名称&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CHROM 和 POS&lt;/code&gt;：参考序列名和variant的位置；如果是INDEL的话，位置是INDEL的第一个碱基位置。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ID&lt;/code&gt;：variant的ID。比如在dbSNP中有该SNP的id，则会在此行给出；若没有，则用”.”表示其为一个novel variant。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;REF 和 ALT&lt;/code&gt;：参考序列的碱基 和 Variant的碱基。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;QUAL&lt;/code&gt;：Phred格式(Phred_scaled)的质量值，表 示在该位点存在variant的可能性；该值越高，则variant的可能性越大；计算方法：&lt;code&gt;Phred值 = -10 * log (1-p)&lt;/code&gt;。 p为variant存在的概率; 通过计算公式可以看出值为10的表示错误概率为0.1，该位点为variant的概率为90%。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;FILTER&lt;/code&gt;：使用上一个QUAL值来进行过滤的话，是不够的。GATK能使用其它的方法来进行过滤，过滤结果中通过则该值为”PASS”;若variant不可靠，则该项不为”PASS”或”.”。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;INFO&lt;/code&gt;：这一行是variant的详细信息，内容很多，以下再具体详述。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;FORMAT 和 TTG11B&lt;/code&gt;：这两行合起来提供了’TTG11B′这个sample的基因型的信息。’TTG11B′代表这该名称的样品，是由BAM文件中的@RG下的 SM 标签决定的。&lt;br&gt;
    
    </summary>
    
      <category term="Bioinformatics" scheme="http://yoursite.com/categories/Bioinformatics/"/>
    
    
  </entry>
  
  <entry>
    <title>bwa用法笔记</title>
    <link href="http://yoursite.com/2017/01/09/bwa%E7%94%A8%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/01/09/bwa用法笔记/</id>
    <published>2017-01-09T02:18:00.000Z</published>
    <updated>2017-09-07T11:25:33.405Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-BWA简介"><a href="#一-BWA简介" class="headerlink" title="一.BWA简介"></a>一.BWA简介</h3><p>bwa（全称Burrows-Wheeler Aligner），主要功能是将差异度较小的序列比对到一个较大的参考基因组上。其中提供了三种算法：</p><table><thead><tr><th>算法</th><th style="text-align:left">应用场景</th></tr></thead><tbody><tr><td>BWA-backtrack</td><td style="text-align:left">illumina测序结果（reads长度不超过100bp）</td></tr><tr><td>BWA-SW</td><td style="text-align:left">支持序列长度70bp-1Mbp，同时支持剪接性比对(<code>split alignments</code>)</td></tr><tr><td>BWA-MEM</td><td style="text-align:left">最常用，最新，最准确，支持序列长度70bp-1Mbp，表现比BWA-backtrack好</td></tr></tbody></table><a id="more"></a><h3 id="二-构建index"><a href="#二-构建index" class="headerlink" title="二.构建index"></a>二.构建index</h3><p>官方文档说明：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bwa index [-p prefix] [-a algoType] &lt;in.db.fasta&gt;</div></pre></td></tr></table></figure></p><p>其中需要的数据库序列为fasta格式。</p><p>选项介绍：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">-p 输出数据库的前缀（默认和输入的文件名一致，输出的数据库在其输入文件所在的文件夹，并以该文件名为前缀）</div><div class="line"></div><div class="line">-a 表示构造BWT索引的算法。可用选项有:</div><div class="line">    </div><div class="line">is 是默认的算法，虽然相对较快，但是需要较大的内存，当构建的数据库大于2GB的时候就不能正常工作了。</div><div class="line"> </div><div class="line">bwtsw 对于短的参考序列式不工作的，必须要大于等于10MB, 但能用于较大的基因组数据，比如人的全基因组。</div></pre></td></tr></table></figure></p><h3 id="三-数据比对"><a href="#三-数据比对" class="headerlink" title="三.数据比对"></a>三.数据比对</h3><p>数据比对大多使用MEM(maximal exact matches) 进行 seeding alignments，再使用 SW(affine-gap Smith-Waterman) 算法进行 seeds 的延伸。</p><p>BWA–MEM 算法执行局部比对和剪接性。可能会出现 query 序列的多个不同的部位出现各自的最优匹配，导致 reads 有多个最佳匹配位点。这对 long reads 的比对是比较重要的结果。但是却会和 Picard 的 markDuplicates 程序不兼容。</p><p>使用方法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bwa mem [potions] ref.fa reads.fq [mates.fq]</div><div class="line"><span class="comment">#mem 进行局部比对，因此，对于一条序列的不同区域可能会产生多种最优匹配结果， 这对于long reads 来说尤为重要。 有些软件如 Picard’s markDuplicates 跟 mem 的这种剪接性比对不兼容,在这种情况下，可以使用 –M 选项来将 shorter split hits 标记为次优。</span></div></pre></td></tr></table></figure></p><p>常用选项：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-t  线程数，默认为1。</div><div class="line">-M  将 shorter split hits 标记为次优，以兼容 Picard’s markDuplicates 软件。</div><div class="line">-p  若无此参数：输入文件只有1个，进行单端比对；若输入文件有2个，则作为paired reads进行比对。若加入此参数：则仅以第1个文件作为输入(输入的文件若有2个，则忽略之)，该文件必须是read1.fq和read2.fa进行reads交叉的数据。</div><div class="line">-R STR  完整的<span class="built_in">read</span> group的头部，可以用 <span class="string">'\t'</span> 作为分隔符， 在输出的SAM文件中被解释为制表符TAB. <span class="built_in">read</span> group 的ID，会被添加到输出文件的每一个<span class="built_in">read</span>的头部。</div><div class="line">-T INT  当比对的分值比 INT 小时，不输出该比对结果，这个参数只影响输出的结果，不影响比对的过程。</div><div class="line">-a      将所有的比对结果都输出，包括 single-end 和 unpaired paired-end的 reads，但是这些比对的结果会被标记为次优。</div></pre></td></tr></table></figure></p><p>运行例子：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">bwa mem ref.fa reads.fq &gt; mem-se.sam</div><div class="line">bwa mem ref.fa read1.fq read2.fq &gt; mem-pe.sam</div><div class="line">bwa mem -t 4 -M -R <span class="string">"\@RG\tID:&#123;library&#125;\tLB:&#123;library&#125;\tPL:Illumina\tPU:&#123;sample&#125;\tSM:&#123;sample&#125;\"  ref.fa read1.fastq read2.fastq &gt; mem-pe.sam 2&gt; ./mem-pe.log</span></div></pre></td></tr></table></figure></p><hr><p> 参考资料：</p><ol><li><a href="http://bio-bwa.sourceforge.net/" target="_blank" rel="external">BWA项目主页</a></li><li><a href="http://starsyi.github.io/2016/05/24/BWA-%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/" target="_blank" rel="external">BWA命令详解-寂寞先生</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一-BWA简介&quot;&gt;&lt;a href=&quot;#一-BWA简介&quot; class=&quot;headerlink&quot; title=&quot;一.BWA简介&quot;&gt;&lt;/a&gt;一.BWA简介&lt;/h3&gt;&lt;p&gt;bwa（全称Burrows-Wheeler Aligner），主要功能是将差异度较小的序列比对到一个较大的参考基因组上。其中提供了三种算法：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;算法&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;应用场景&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;BWA-backtrack&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;illumina测序结果（reads长度不超过100bp）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BWA-SW&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;支持序列长度70bp-1Mbp，同时支持剪接性比对(&lt;code&gt;split alignments&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BWA-MEM&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;最常用，最新，最准确，支持序列长度70bp-1Mbp，表现比BWA-backtrack好&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="Bioinformatics" scheme="http://yoursite.com/categories/Bioinformatics/"/>
    
    
  </entry>
  
  <entry>
    <title>samtools及bcftools常用参数和使用文档</title>
    <link href="http://yoursite.com/2016/12/20/samtools%E5%8F%8ABCFtools%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0%E5%92%8C%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/"/>
    <id>http://yoursite.com/2016/12/20/samtools及BCFtools常用参数和使用文档/</id>
    <published>2016-12-20T11:18:00.000Z</published>
    <updated>2017-09-07T10:47:26.864Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h3><p>samtools的说明文档：<a href="http://samtools.sourceforge.net/samtools.shtml" target="_blank" rel="external">http://samtools.sourceforge.net/samtools.shtml</a><br>samtools是一个用于操作sam和bam文件的工具合集。在前期测序数据的处理中比较常用。其包含许多命令，以下是常用命令的介绍。</p><h3 id="二、view"><a href="#二、view" class="headerlink" title="二、view"></a>二、view</h3><p><strong>view命令的主要功能</strong>：将sam文件转换成bam文件；然后对bam文件进行各种操作，比如数据的排序(其他命令功能)和提取(这些操作是对bam文件进行的，因而当输入为sam文件的时候，不能进行该操作)；最后将排序或提取得到的数据输出为bam或sam格式。</p><p><strong>bam文件优点</strong>：bam文件为二进制文件，占用的磁盘空间比sam文本文件小；利用bam二进制文件的运算速度快。<br><a id="more"></a><br><strong>View重要参数：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">Usage: samtools view [options] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]</div><div class="line"><span class="comment">#默认情况下不加 region，则是输出所有的 region.</span></div><div class="line"></div><div class="line">Options: -b     output BAM</div><div class="line">                <span class="comment">#默认下输出是 SAM 格式文件，该参数设置输出 BAM 格式</span></div><div class="line">         -h     <span class="built_in">print</span> header <span class="keyword">for</span> the SAM output</div><div class="line">                <span class="comment">#默认下输出的 sam 格式文件不带 header，该参数设定输出sam文件时带 header 信息</span></div><div class="line">         -H     <span class="built_in">print</span> header only (no alignments)</div><div class="line">         -S     input is SAM</div><div class="line">                <span class="comment">#默认下输入是 BAM 文件，若是输入是 SAM 文件，则最好加该参数，否则有时候会报错。</span></div><div class="line">         -u     uncompressed BAM output (force -b)</div><div class="line">                <span class="comment">#该参数的使用需要有-b参数，能节约时间，但是需要更多磁盘空间。</span></div><div class="line">        </div><div class="line">         -F INT   filtering flag, 0 <span class="keyword">for</span> <span class="built_in">unset</span> [0] </div><div class="line">                  Skip alignments with bits present <span class="keyword">in</span> INT [0]</div><div class="line">                  <span class="comment">#数字4代表该序列没有比对到参考序列上</span></div><div class="line">                  <span class="comment">#数字8代表该序列的mate序列没有比对到参考序列上</span></div><div class="line">         -q INT   <span class="comment">#最低比对质量 [0]</span></div><div class="line">         -l STR   only output reads <span class="keyword">in</span> library STR [null]</div></pre></td></tr></table></figure></p><p><strong>常用命令示例</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#将sam文件转换成bam文件</span></div><div class="line">$ samtools view -bS abc.sam &gt; abc.bam</div><div class="line">$ samtools view -b -S abc.sam -o abc.bam</div><div class="line"></div><div class="line"><span class="comment">#提取比对到参考序列上的比对结果</span></div><div class="line">$ samtools view -bF 4 abc.bam &gt; abc.F.bam</div><div class="line"></div><div class="line"><span class="comment">#提取paired reads中两条reads都比对到参考序列上的比对结果，只需要把两个4+8的值12作为过滤参数即可</span></div><div class="line">$ samtools view -bF 12 abc.bam &gt; abc.F12.bam</div><div class="line"></div><div class="line"><span class="comment">#提取没有比对到参考序列上的比对结果</span></div><div class="line">$ samtools view -bf 4 abc.bam &gt; abc.f.bam</div><div class="line"></div><div class="line"><span class="comment">#根据fasta文件，将 header 加入到 sam 或 bam 文件中</span></div><div class="line">$ samtools view -T genome.fasta -h scaffold1.sam &gt; scaffold1.h.sam</div></pre></td></tr></table></figure></p><h3 id="三、sort"><a href="#三、sort" class="headerlink" title="三、sort"></a>三、sort</h3><p><strong>sort命令主要功能：</strong>对bam文件进行排序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Usage: samtools sort [-n] [-m &lt;maxMem&gt;] &lt;in.bam&gt; &lt;out.prefix&gt;  </div><div class="line">-m 参数默认下是 500,000,000 即500M（不支持K，M，G等缩写）以下数据进行处理。对于处理大数据时，如果内存够用，则设置较大值，以节约时间。</div><div class="line">-n 设定排序方式按short reads的ID排序。默认下是按序列在fasta文件中的顺序（即header）和序列从左往右的位点排序。</div></pre></td></tr></table></figure></p><h3 id="四、index"><a href="#四、index" class="headerlink" title="四、index"></a>四、index</h3><p>注意：必须对bam文件进行默认情况下的排序后，才能进行index。否则会报错。</p><p>建立索引后将产生后缀为.bai的文件，用于快速的随机处理。很多情况下需要有bai文件的存在，特别是显示序列比对情况下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Usage: samtools index &lt;in.bam&gt; [out.index]</div><div class="line"></div><div class="line">例子：</div><div class="line">#以下两种命令结果一样</div><div class="line">$ samtools index abc.sort.bam</div><div class="line">$ samtools index abc.sort.bam abc.sort.bam.bai</div></pre></td></tr></table></figure><h3 id="五、mpileup-重要，此工具用于call-snp"><a href="#五、mpileup-重要，此工具用于call-snp" class="headerlink" title="五、mpileup(重要，此工具用于call snp)"></a>五、mpileup(重要，此工具用于call snp)</h3><p><strong>mpileup用法</strong>：该命令用于生成bcf文件，再使用bcftools进行SNP和Indel的分析。</p><p>其用法和最简单的例子如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Usage: samtools mpileup [-EBug] [-C capQcoef] [-r reg] [-f in.fa] [-l list] [-M capMapQ] [-Q minBaseQ] [-q minMapQ] in.bam [in2.bam [...]]</div><div class="line"></div><div class="line">$ samtools mpileup -f genome.fasta abc.bam &gt; abc.txt</div><div class="line">$ samtools mpileup -gSDf genome.fasta abc.bam &gt; abc.bcf</div><div class="line">$ samtools mpileup -guSDf genome.fasta abc.bam | \</div><div class="line">           bcftools view -cvNg - &gt; abc.vcf</div></pre></td></tr></table></figure></p><p>mpileup不使用-u或-g参数时，则不生成二进制的bcf文件，而生成一个文本文件(输出到标准输出)。该文本文件统计了参考序列中每个碱基位点的比对情况；该文件每一行代表了参考序列中某一个碱基位点的比对结果。比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">scaffold_1      2841    A       11      ,,,...,....     BHIGDGIJ?FF</div><div class="line">scaffold_1      2842    C       12      ,$,,...,....^I. CFGEGEGGCFF+</div><div class="line">scaffold_1      2843    G       11      ,,...,.....     FDDDDCD?DD+</div><div class="line">scaffold_1      2844    G       11      ,,...,.....     FA?AAAA&lt;AA+</div><div class="line">scaffold_1      2845    G       11      ,,...,.....     F656666166*</div><div class="line">scaffold_1      2846    A       11      ,,...,.....     (1.1111)11*</div><div class="line">scaffold_1      2847    A       11      ,,+9acggtgaag.+9ACGGTGAAT.+9ACGGTGAAG.+9ACGGTGAAG,+9acggtgaag.+9ACGGTGAAG.+9ACGGTGAAG.+9ACGGTGAAG.+9ACGGTGAAG.+9ACGGTGAAG       %.+....-..)</div><div class="line">scaffold_1      2848    N       11      agGGGgGGGGG     !!$!!!!!!!!</div><div class="line">scaffold_1      2849    A       11      c$,...,.....    !0000000000</div><div class="line">scaffold_1      2850    A       10      ,...,.....      353333333</div></pre></td></tr></table></figure></p><p>mpileup生成的结果包含6行：参考序列名；位置；参考碱基；比对上的reads数；比对情况；比对上的碱基的质量。其中第5列比较复杂,做如下解释：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">1 ‘.’代表与参考序列正链匹配。</div><div class="line">2 ‘,’代表与参考序列负链匹配。</div><div class="line">3 ‘ATCGN’代表在正链上的不匹配。</div><div class="line">4 ‘atcgn’代表在负链上的不匹配。</div><div class="line">5 ‘*’代表模糊碱基</div><div class="line">6 ‘^’代表匹配的碱基是一个read的开始；’^’后面紧跟的ascii码减去33代表比对质量；这两个符号修饰的是后面的碱基，其后紧跟的碱基(.,ATCGatcgNn)代表该read的第一个碱基。</div><div class="line">7 ‘$’代表一个read的结束，该符号修饰的是其前面的碱基。</div><div class="line">8 正则式’+[0-9]+[ACGTNacgtn]+’代表在该位点后插入的碱基；比如上例中在scaffold_1的2847后插入了9个长度的碱基acggtgaag。表明此处极可能是indel。</div><div class="line">9 正则式’-[0-9]+[ACGTNacgtn]+’代表在该位点后缺失的碱基；</div></pre></td></tr></table></figure></p><h3 id="六、bcftools"><a href="#六、bcftools" class="headerlink" title="六、bcftools"></a>六、bcftools</h3><p><strong>bcftools用法</strong>：用于处理vcf(variant call format)文件和bcf(binary call format)文件。前者为文本文件，后者为其二进制文件。最主要的命令是view命令来进行SNP和Indel calling。该命令的使用例子为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ bcftools view -cvNg abc.bcf &gt; snp_indel.vcf</div></pre></td></tr></table></figure><p>使用bcftools得到variant calling结果后。需要对结果再次进行过滤。主要依据比对结果中第8列信息。其中的 DP4 一行较为重要，它提供了4个数据：<br>1 比对结果和正链一致的reads数、<br>2 比对结果和负链一致的reads数、<br>3 比对结果在正链的variant上的reads数、<br>4 比对结果在负链的variant上的reads数。<br>可以设定 （value3 + value4）大于某一阈值，才算是variant。比如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ perl -ne <span class="string">'print $_ if /DP4=(\d+),(\d+),(\d+),(\d+)/ &amp;&amp; ($3+$4)&gt;=10 &amp;&amp; ($3+$4)/($1+$2+$3+$4)&gt;=0.8'</span> snp_indel.vcf &gt; snp_indel.final.vcf</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、概述&quot;&gt;&lt;a href=&quot;#一、概述&quot; class=&quot;headerlink&quot; title=&quot;一、概述&quot;&gt;&lt;/a&gt;一、概述&lt;/h3&gt;&lt;p&gt;samtools的说明文档：&lt;a href=&quot;http://samtools.sourceforge.net/samtools.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://samtools.sourceforge.net/samtools.shtml&lt;/a&gt;&lt;br&gt;samtools是一个用于操作sam和bam文件的工具合集。在前期测序数据的处理中比较常用。其包含许多命令，以下是常用命令的介绍。&lt;/p&gt;
&lt;h3 id=&quot;二、view&quot;&gt;&lt;a href=&quot;#二、view&quot; class=&quot;headerlink&quot; title=&quot;二、view&quot;&gt;&lt;/a&gt;二、view&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;view命令的主要功能&lt;/strong&gt;：将sam文件转换成bam文件；然后对bam文件进行各种操作，比如数据的排序(其他命令功能)和提取(这些操作是对bam文件进行的，因而当输入为sam文件的时候，不能进行该操作)；最后将排序或提取得到的数据输出为bam或sam格式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bam文件优点&lt;/strong&gt;：bam文件为二进制文件，占用的磁盘空间比sam文本文件小；利用bam二进制文件的运算速度快。&lt;br&gt;
    
    </summary>
    
      <category term="Bioinformatics" scheme="http://yoursite.com/categories/Bioinformatics/"/>
    
    
  </entry>
  
  <entry>
    <title>git简单实用笔记</title>
    <link href="http://yoursite.com/2016/09/27/git%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/09/27/git简单使用笔记/</id>
    <published>2016-09-27T01:26:28.000Z</published>
    <updated>2017-09-07T08:26:50.751Z</updated>
    
    <content type="html"><![CDATA[<h3 id="git是什么"><a href="#git是什么" class="headerlink" title="git是什么"></a>git是什么</h3><p><code>git</code>是一种版本控制系统，在多人协作项目中很有用处。在对某文档进行多次修改的时候，需要一个软件来记录进行的所有修改，而针对不同人的修改，应该有所标记，以便于随时查错，返回上一版本。git作为这样一种分布式版本控制工具，其可以快速便捷地适应这样的要求。</p><p>各个平台下<code>git</code>的安装方法都在<a href="https://github.com" target="_blank" rel="external">github</a>官方网站中有详细的介绍，因此这里不再赘述。</p><h3 id="git的使用"><a href="#git的使用" class="headerlink" title="git的使用"></a><code>git</code>的使用</h3><h4 id="创建git版本库"><a href="#创建git版本库" class="headerlink" title="创建git版本库"></a>创建git版本库</h4><p>git版本库用于储存将要被修改的文件，创建方式非常简单，创建一个空目录，输入一行git命令即可。在<code>git bash</code>或者<code>Linux</code>环境下，可以使用以下代码创建一个git版本库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir mygit</div><div class="line">$ <span class="built_in">cd</span> mygit</div><div class="line">$ git init</div></pre></td></tr></table></figure><p>这样一个名为<code>mygit</code>的版本库就创建好了。</p><h4 id="查看被修改的git版本库"><a href="#查看被修改的git版本库" class="headerlink" title="查看被修改的git版本库"></a>查看被修改的git版本库</h4><p>在对<code>git</code>版本库中的内容进行修改后，怎样查看被修改内容呢？有两种方法可以查看：<br><a id="more"></a><br>第一种是使用<code>git status</code>命令进行查看。这条命令可以显示<code>git</code>版本库中有哪些文件被修改了，是否被检查等等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看git仓库现在的状态</span></div><div class="line">$ git status</div></pre></td></tr></table></figure><p>第二种是使用<code>git diff</code>命令对修改的地方进行详细查看，具体使用方法为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看名为myfile的文件中具体的修改内容</span></div><div class="line">$ git diff myfile</div><div class="line">git下如何提交修改</div></pre></td></tr></table></figure></p><p><code>git</code>下对版本库中的内容修改方式分为两步，首先使用<code>add</code>命令检查出版本库中的所有修改；其次，使用<code>commit</code>命令提交修改。</p><p><code>git</code>下常用的<code>add</code>命令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 检查版本库中的所有修改内容</span></div><div class="line">$ git add .</div></pre></td></tr></table></figure><p>git下提交修改的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 使用默认值对版本库中的修改进行提交</span></div><div class="line">$ git commit</div><div class="line"><span class="comment"># 使用自定义的commit内容进行修改内容提交</span></div><div class="line">$ git commit -m <span class="string">"commit message here"</span></div></pre></td></tr></table></figure><p>如果使用默认值进行<code>commit</code>，那么系统会自动生成一个文档，里面详细记录了版本库中的文件被怎样修改。不过，此时这个文档中的所有行都是被注释过的，如果的确需要提交<code>commit</code>，那么就需要对这个文件进行一定的修改。由于默认情况下，git bash使用内置的vim打开文档，键入<code>i</code>就可以对文档进行修改。一般情况下，只需要去掉文档中的<code>#</code>即可。</p><h4 id="git下对分支的操作"><a href="#git下对分支的操作" class="headerlink" title="git下对分支的操作"></a>git下对分支的操作</h4><p><code>git</code>中使用以下命令进行分支的创建并将指针转向该分支（branch）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 建立一个名为dev的分支并转向该分支上工作</span></div><div class="line">$ git checkout -b dev</div><div class="line"><span class="comment"># 转移到已有的名为dev的分支上进行工作</span></div><div class="line">$ git checkout dev</div><div class="line"><span class="comment"># 查看已有分支及自己所在的工作分支</span></div><div class="line">$ git branch</div><div class="line"><span class="comment"># 将dev分支并到master（主）分支上，合并后即可删除dev分支</span></div><div class="line">$ git merge dev</div><div class="line"><span class="comment"># 图形化查看分支的合并情况</span></div><div class="line">$ git <span class="built_in">log</span> --graph --pretty=oneline --abbrev-commit</div><div class="line"><span class="comment"># 删除dev分支</span></div><div class="line">$ git branch -d dev</div></pre></td></tr></table></figure></p><h3 id="git分支管理策略"><a href="#git分支管理策略" class="headerlink" title="git分支管理策略"></a>git分支管理策略</h3><p>实际开发中管理<code>git</code>的原则：</p><ol><li><code>master</code>应该为最稳定的分支，应该仅用来发布新版本，平时调试和小功能的提交不应该使用<code>master</code>分支。</li><li>合并分支的时候应该尽量使用<code>-no-ff</code>模式，即“禁止使用快速合并分支”，这样可以看出曾经做过分支的合并，从而更好地了解项目进程。<br>最后的话</li></ol><p>这只是git的简单使用，由于本人并没有多人协作大项目的经历，因此例如brach之间的冲突、多人协作中需要注意的问题等并没有涉及，这里也就没有加上。当然了解git的更高级的用法也是很有必要的。这里推荐廖雪峰的git教程，言简意赅又非常生动形象。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;git是什么&quot;&gt;&lt;a href=&quot;#git是什么&quot; class=&quot;headerlink&quot; title=&quot;git是什么&quot;&gt;&lt;/a&gt;git是什么&lt;/h3&gt;&lt;p&gt;&lt;code&gt;git&lt;/code&gt;是一种版本控制系统，在多人协作项目中很有用处。在对某文档进行多次修改的时候，需要一个软件来记录进行的所有修改，而针对不同人的修改，应该有所标记，以便于随时查错，返回上一版本。git作为这样一种分布式版本控制工具，其可以快速便捷地适应这样的要求。&lt;/p&gt;
&lt;p&gt;各个平台下&lt;code&gt;git&lt;/code&gt;的安装方法都在&lt;a href=&quot;https://github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;官方网站中有详细的介绍，因此这里不再赘述。&lt;/p&gt;
&lt;h3 id=&quot;git的使用&quot;&gt;&lt;a href=&quot;#git的使用&quot; class=&quot;headerlink&quot; title=&quot;git的使用&quot;&gt;&lt;/a&gt;&lt;code&gt;git&lt;/code&gt;的使用&lt;/h3&gt;&lt;h4 id=&quot;创建git版本库&quot;&gt;&lt;a href=&quot;#创建git版本库&quot; class=&quot;headerlink&quot; title=&quot;创建git版本库&quot;&gt;&lt;/a&gt;创建git版本库&lt;/h4&gt;&lt;p&gt;git版本库用于储存将要被修改的文件，创建方式非常简单，创建一个空目录，输入一行git命令即可。在&lt;code&gt;git bash&lt;/code&gt;或者&lt;code&gt;Linux&lt;/code&gt;环境下，可以使用以下代码创建一个git版本库。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ mkdir mygit&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; mygit&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git init&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样一个名为&lt;code&gt;mygit&lt;/code&gt;的版本库就创建好了。&lt;/p&gt;
&lt;h4 id=&quot;查看被修改的git版本库&quot;&gt;&lt;a href=&quot;#查看被修改的git版本库&quot; class=&quot;headerlink&quot; title=&quot;查看被修改的git版本库&quot;&gt;&lt;/a&gt;查看被修改的git版本库&lt;/h4&gt;&lt;p&gt;在对&lt;code&gt;git&lt;/code&gt;版本库中的内容进行修改后，怎样查看被修改内容呢？有两种方法可以查看：&lt;br&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://yoursite.com/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>常见hexo博客命令用法及博客优化过程</title>
    <link href="http://yoursite.com/2016/09/25/%E5%B8%B8%E8%A7%81hexo%E5%8D%9A%E5%AE%A2%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95%E5%8F%8A%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/09/25/常见hexo博客命令用法及博客优化过程/</id>
    <published>2016-09-25T01:18:00.000Z</published>
    <updated>2017-09-07T11:26:09.841Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常见hexo命令"><a href="#常见hexo命令" class="headerlink" title="常见hexo命令"></a>常见hexo命令</h2><p>以下是常见的hexo命令，在搭建hexo博客中一定会用到。<br>新建一篇博文，默认保存在本地博客目录下的/source/_post文件夹中,并形成一个以name命名的md文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo n <span class="string">'name'</span></div></pre></td></tr></table></figure><p>更新博客（生成新的静态博客文件）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div></pre></td></tr></table></figure><p>预览博客（让博客服务器运行在本地，一般地址为localhost:4000）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s</div></pre></td></tr></table></figure><a id="more"></a><p>部署博客到github等使用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d</div></pre></td></tr></table></figure><p>关于各命令的详细用法，在hexo的官方使用文档中有详细的介绍，这里不再赘述。需要注意的是，在配置过程中，_config.yml文件里涉及的选项等需要在选项名冒号后加一个空格再输入项目的值。</p><h2 id="为博客添加分类、“关于我”、标签页面等"><a href="#为博客添加分类、“关于我”、标签页面等" class="headerlink" title="为博客添加分类、“关于我”、标签页面等"></a>为博客添加分类、“关于我”、标签页面等</h2><h3 id="创建分类页面，并且在菜单中显示页面链接"><a href="#创建分类页面，并且在菜单中显示页面链接" class="headerlink" title="创建分类页面，并且在菜单中显示页面链接"></a>创建分类页面，并且在菜单中显示页面链接</h3><p>1.新建一个页面，命名为categories。命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page categories</div></pre></td></tr></table></figure><p>2.编辑刚新建的页面，将页面类型设置为categories，主题会自动为这个页面显示所有分类</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">title: 分类</div><div class="line">date: 20xx-xx-xx xx:xx:xx</div><div class="line"><span class="built_in">type</span>: <span class="string">"categories"</span></div><div class="line">---</div></pre></td></tr></table></figure><p>3.在主页菜单中添加链接。编辑主题文件夹中的_config.yml，将menu中的categories: /categories注释去掉即可，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">home: /</div><div class="line">categories: /categories</div><div class="line">archives: /archives</div><div class="line">tags: /tags</div></pre></td></tr></table></figure><h3 id="创建”关于我”页面，并且在菜单中显示页面链接"><a href="#创建”关于我”页面，并且在菜单中显示页面链接" class="headerlink" title="创建”关于我”页面，并且在菜单中显示页面链接"></a>创建”关于我”页面，并且在菜单中显示页面链接</h3><p>1.新建一个about页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page <span class="string">"about"</span></div></pre></td></tr></table></figure><p>2.为菜单添加about链接，在主题的_config.yml文件中进行修改，将menu中的about前的注释去掉即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">home: /</div><div class="line">categories: /categories</div><div class="line">archives: /archives</div><div class="line">tags: /tags</div></pre></td></tr></table></figure><h3 id="创建标签云页面，并且在菜单中显示页面链接"><a href="#创建标签云页面，并且在菜单中显示页面链接" class="headerlink" title="创建标签云页面，并且在菜单中显示页面链接"></a>创建标签云页面，并且在菜单中显示页面链接</h3><p>操作方法和以上添加“关于我”及分类页面的操作方式类似，也需要新建页面并且对主题文件夹中的<code>_config.yml</code>文件进行修改。<br>不过，值得注意的是博客文章中添加分类的方式。<br>博客文章中通过修改标题部分的文字来注明这篇博文的所属类别及标签。如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 使用github结合hexo搭建静态个人博客</div><div class="line">date: 2016-9-17</div><div class="line">categories: Configuration</div><div class="line">tags:</div><div class="line">- github</div><div class="line">- hexo</div><div class="line">---</div></pre></td></tr></table></figure><p>不同的标签使用代码所示的方法进行分割，也可以使用另一种方法来表示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tags: [github, hexo]</div></pre></td></tr></table></figure><h2 id="为博客添加搜索引擎收录"><a href="#为博客添加搜索引擎收录" class="headerlink" title="为博客添加搜索引擎收录"></a>为博客添加搜索引擎收录</h2><p>这里本人使用google搜索收录。首先在<a href="https://www.google.com/webmasters/tools/home?hl=zh" target="_blank" rel="external">google console</a>中添加一个站点，点击界面右上角的添加属性，在弹出窗口中输入博客网站，随后会提示验证网站所有权。采用备用方法：html标记后，在网站首页中添加元标签，点击确认即可进行验证。</p><p>此时点击google console，点击网站的标题就可以进入管理页。可以看到侧边栏有一系列菜单，选择抓取中的站点地图，接着选择右侧的添加/测试站点地图，将自己博客中的sitemap.xml文件提交即可完成。</p><p>一般添加到google收录后，需要一天才能通过google搜索到网站的相关信息。</p><h2 id="为博客添加访问量显示功能"><a href="#为博客添加访问量显示功能" class="headerlink" title="为博客添加访问量显示功能"></a>为博客添加访问量显示功能</h2><p>由于Next主题中已经集成了多种显示访问量的工具，只需要在原文件中稍稍修改即可。这里本人使用的是不蒜子的网站访问工具。删除掉注释代码后，工具即可使用，如果出现不能使用的情况，将<a href="http://ibruce.info/" target="_blank" rel="external">不蒜子官网</a>中的js代码部分添加到主页代码中即可。</p><p>参考资料</p><blockquote><p>1.<a href="http://fionat.github.io/blog/2013/10/23/sitemap/" target="_blank" rel="external">Hexo优化｜如何向google提交sitemap</a><br>2.<a href="http://ijiaober.github.io/2014/08/04/hexo/hexo-03/" target="_blank" rel="external">Hexo使用攻略：（三）Hexo的配置和使用</a><br>3.<a href="http://lulee007.coding.me/2016/01/16/Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E9%85%8D%E7%BD%AE%E4%B9%8B-%E4%B8%BA%E8%87%AA%E5%B7%B1%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%BD%91%E9%A1%B5%E6%94%B6%E5%BD%95/" target="_blank" rel="external">Hexo博客优化配置之–为自己博客添加搜索引擎网页收录</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;常见hexo命令&quot;&gt;&lt;a href=&quot;#常见hexo命令&quot; class=&quot;headerlink&quot; title=&quot;常见hexo命令&quot;&gt;&lt;/a&gt;常见hexo命令&lt;/h2&gt;&lt;p&gt;以下是常见的hexo命令，在搭建hexo博客中一定会用到。&lt;br&gt;新建一篇博文，默认保存在本地博客目录下的/source/_post文件夹中,并形成一个以name命名的md文件。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo n &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更新博客（生成新的静态博客文件）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;预览博客（让博客服务器运行在本地，一般地址为localhost:4000）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo s&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
  </entry>
  
  <entry>
    <title>github结合hexo搭建个人静态博客</title>
    <link href="http://yoursite.com/2016/09/17/github%E7%BB%93%E5%90%88hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/09/17/github结合hexo搭建个人静态博客/</id>
    <published>2016-09-17T11:16:18.000Z</published>
    <updated>2017-09-07T08:27:25.602Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、github的下载及github-pages的配置"><a href="#一、github的下载及github-pages的配置" class="headerlink" title="一、github的下载及github pages的配置"></a>一、github的下载及github pages的配置</h2><p>github在多平台下都可以安装，google搜索github，进入<a href="https://git-scm.com/download" target="_blank" rel="external">官网</a>即可下载自己所需要的版本。各版本安装过程均较为简单，且官方手册叙述详细，在此不再赘述。</p><p>下面以windows平台为例介绍后续配置方法。</p><p>下载完成后，打开git终端，首先使用cd命令跳转到相应盘符建立一个新的工作目录，并将git部署在此目录下。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#将目录换至工作目录</span></div><div class="line"><span class="built_in">cd</span> /e</div><div class="line"><span class="comment">#新建一个名为mygit的工作目录用户存储本地项目</span></div><div class="line">mkdir mygit</div><div class="line"><span class="built_in">cd</span> mygit</div></pre></td></tr></table></figure></p><p>接下来，检查本机ssh-key的设置，此设置是为了安全地连接本机和github服务器。如果没有设置过ssh-key，这里则需要生成新的ssh-key。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~/.ssh</div><div class="line"><span class="comment">#如果提示没有相应的文件或文件夹，需要创建一个新的ssh-key</span></div><div class="line"><span class="comment">#邮箱需要填写注册github时使用的邮箱</span></div><div class="line">ssh-keygen -t rsa -C <span class="string">"邮箱地址@yourmail.com"</span></div></pre></td></tr></table></figure></p><p>接着需要输入加密串。一段自己可以记得住的密码即可，会要求重复输入。最后会有ssh-key输出成功的提示，另外在.ssh文件夹中也可以发现新生成了公钥和密钥文件。</p><p>下面要做的是将公钥上传到github中，完成github服务器和本机的联系。在~.ssh文件夹中找到<code>id_rsa.pub</code>，并将其复制到github个人主页中的<code>SSH and GPG keys</code>一项中。 </p><p>上传完成后进行测试，尝试连接github。使用以下代码实现。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure></p><p>会要求输入刚才生成ssh-key时需要的加密串，输入正确后验证成功。<br>接下来要进行<code>github pages</code>的创建。<br><a id="more"></a><br>在github中创建一个<code>repository</code>，需要注意的是如果要创建<code>github pages</code>,必须以域名格式对此<code>repository</code>进行命名，即形如<code>×××.github.io</code>的形式。</p><p>复制此项目的在github中的地址，将项目克隆至本机。（需要注意的是，在<code>github</code>上搭建博客需要对github的工作原理及使用方法有一定了解，如项目的创建，克隆等等，可以参考<a href="http://www.bootcss.com/p/git-guide/" target="_blank" rel="external">git简明指南</a>进行了解）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#实际操作时，以自己的项目地址为准</span></div><div class="line">git <span class="built_in">clone</span> https://github.com/aaaa/aaaa.git</div></pre></td></tr></table></figure><p>如此便完成了<code>github</code>的本地配置以及<code>github pages</code>的配置。</p><hr><h2 id="二、Hexo模板的使用"><a href="#二、Hexo模板的使用" class="headerlink" title="二、Hexo模板的使用"></a>二、Hexo模板的使用</h2><p>事实上，可以用于在github上搭建博客的模板和语言有很多种，比如基于<code>node.js</code>的<code>Hexo</code>,还有基于<code>Ruby</code>的<code>jelyll</code>等。由于<code>node.js</code>在windows下的安装更为简单，本人使用了Hexo作为搭建博客的模板。</p><p>首先需要下载<code>node.js</code>,其同样支持多种平台，下载链接<a href="https://nodejs.org/en/download/" target="_blank" rel="external">在此</a>。</p><p>windows下的安装同样十分简单，运行exe文件后一路下一步即可。安装完成后，打开<code>cmd</code>，在其中输入<code>npm</code>,如果出现了关于其用法的介绍，则说明<code>node.js</code>安装成功且其安装路径已经加入了系统环境变量中。</p><p>接下来使用npm下载博客模板，首先需要在本地新建一个文件夹用来存储博客需要的文件，拟将此文件夹命名为<code>blog</code>。</p><p>切换至blog目录，安装Hexo模板，使用如下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> blog</div><div class="line">npm install hexo-cli -g</div></pre></td></tr></table></figure></p><p>接着安装博客所需要的相关插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-index --save</div><div class="line">npm install hexo-generator-archive --save</div><div class="line">npm install hexo-generator-category --save</div><div class="line">npm install hexo-generator-tag --save</div><div class="line">npm install hexo-server --save</div><div class="line">npm install hexo-deployer-git --save</div><div class="line">npm install hexo-deployer-heroku --save</div><div class="line">npm install hexo-deployer-rsync --save</div><div class="line">npm install hexo-deployer-openshift --save</div><div class="line">npm install hexo-renderer-marked@0.2 --save</div><div class="line">npm install hexo-renderer-stylus@0.2 --save</div><div class="line">npm install hexo-generator-feed@1 --save</div><div class="line">npm install hexo-generator-sitemap@1 --save</div><div class="line">npm install moment-timezone --save</div></pre></td></tr></table></figure></p><p>下载完成后，即可进行博客的配置和博文的撰写。关于<code>Hexo</code>的相关文档，可以到<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">这个网站</a>进行查看，其中详细地介绍了Hexo博客模板中各个参数的使用。</p><p>搭建博客使用以下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">hexo init blog</div><div class="line"><span class="built_in">cd</span> blog</div><div class="line">npm install</div><div class="line">hexo g <span class="comment">#生成静态文件，默认在当前目录下生成一个叫做public的文件夹</span></div><div class="line"><span class="comment">#关于hexo命令的更多用法及更多命令，可以在帮助文档中进行查看。</span></div></pre></td></tr></table></figure></p><p>预览博客，使用以下代码实现<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s</div></pre></td></tr></table></figure></p><p>在浏览器地址栏中输入<code>http://localhost:4000</code>即可预览博客。另外在命令行中也可以看到可能存在的报错信息用于调试。</p><h2 id="三、更换博客主题"><a href="#三、更换博客主题" class="headerlink" title="三、更换博客主题"></a>三、更换博客主题</h2><p>在<code>github</code>中或者<code>hexo</code>的项目网站中找到自己喜欢的主题，然后将其在github中的项目复制到本地，进而修改blog中的<code>_config.yml</code>文件，将<code>theme</code>字段修改为目标主题名称。此处以<code>next</code>主题为例对博客主题进行修改。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next.git themes/next</div></pre></td></tr></table></figure></p><p>更换完毕后，可能需要删除博客中的数据库文件，重启server服务后即可查看更换主题后的博客内容。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo s</div></pre></td></tr></table></figure></p><p>关于<code>next</code>主题的相关修改方法文档，可以通过<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">这里</a>来了解更多，作者将主题配置的问题在那里列举地非常详细。</p><hr><p>参考资料：</p><blockquote><p>1.<a href="https://wsgzao.github.io/post/hexo-guide/" target="_blank" rel="external">HelloDog——使用GitHub和Hexo搭建免费静态Blog</a><br>2.<a href="http://jiji262.github.io/2016/04/15/2016-04-15-hexo-github-pages-blog/" target="_blank" rel="external">令狐葱——手把手教你使用Hexo + Github Pages搭建个人独立博客</a><br>3.<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo官方文档</a><br>4.<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">Next使用文档</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、github的下载及github-pages的配置&quot;&gt;&lt;a href=&quot;#一、github的下载及github-pages的配置&quot; class=&quot;headerlink&quot; title=&quot;一、github的下载及github pages的配置&quot;&gt;&lt;/a&gt;一、github的下载及github pages的配置&lt;/h2&gt;&lt;p&gt;github在多平台下都可以安装，google搜索github，进入&lt;a href=&quot;https://git-scm.com/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;即可下载自己所需要的版本。各版本安装过程均较为简单，且官方手册叙述详细，在此不再赘述。&lt;/p&gt;
&lt;p&gt;下面以windows平台为例介绍后续配置方法。&lt;/p&gt;
&lt;p&gt;下载完成后，打开git终端，首先使用cd命令跳转到相应盘符建立一个新的工作目录，并将git部署在此目录下。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#将目录换至工作目录&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /e&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#新建一个名为mygit的工作目录用户存储本地项目&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mkdir mygit&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; mygit&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来，检查本机ssh-key的设置，此设置是为了安全地连接本机和github服务器。如果没有设置过ssh-key，这里则需要生成新的ssh-key。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/.ssh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#如果提示没有相应的文件或文件夹，需要创建一个新的ssh-key&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#邮箱需要填写注册github时使用的邮箱&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&quot;邮箱地址@yourmail.com&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接着需要输入加密串。一段自己可以记得住的密码即可，会要求重复输入。最后会有ssh-key输出成功的提示，另外在.ssh文件夹中也可以发现新生成了公钥和密钥文件。&lt;/p&gt;
&lt;p&gt;下面要做的是将公钥上传到github中，完成github服务器和本机的联系。在~.ssh文件夹中找到&lt;code&gt;id_rsa.pub&lt;/code&gt;，并将其复制到github个人主页中的&lt;code&gt;SSH and GPG keys&lt;/code&gt;一项中。 &lt;/p&gt;
&lt;p&gt;上传完成后进行测试，尝试连接github。使用以下代码实现。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ssh -T git@github.com&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;会要求输入刚才生成ssh-key时需要的加密串，输入正确后验证成功。&lt;br&gt;接下来要进行&lt;code&gt;github pages&lt;/code&gt;的创建。&lt;br&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
  </entry>
  
</feed>
